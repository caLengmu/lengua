<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vocabulary Quiz</title>
    <style>
        :root {
            --color-bg: #f4f1de;
            --color-text: #2d334a;
            --color-primary: #e07a5f;
            --color-secondary: #81b29a;
            --color-accent: #f2cc8f;
            --color-button1: #3d405b;
            --color-button2: #e07a5f;
            --color-button3: #81b29a;
            --color-button4: #f2cc8f;
            --color-button5: #d62828;
        }

        body {
            font-family: 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--color-bg);
            color: var(--color-text);
            margin: 0;
            padding: 20px;
            line-height: 1.6;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: var(--color-primary);
            margin-bottom: 20px;
        }

        button {
            cursor: pointer;
            border: none;
            border-radius: 4px;
            padding: 8px 16px;
            font-weight: bold;
            transition: background-color 0.2s;
        }

        button:hover {
            opacity: 0.9;
        }

        #startLearningBtn {
            background-color: var(--color-primary);
            color: white;
            padding: 12px 24px;
            font-size: 18px;
            display: block;
            margin: 0 auto 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: var(--color-accent);
            color: var(--color-text);
        }

        .speaker-icon {
            cursor: pointer;
            margin-left: 10px;
            color: var(--color-primary);
        }

        #quizModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .quiz-content {
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            position: relative;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            cursor: pointer;
            color: var(--color-text);
        }

        #promptText {
            font-size: 22px;
            margin-bottom: 20px;
            color: var(--color-text);
        }

        #answerInput {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 2px solid var(--color-accent);
            border-radius: 4px;
            font-size: 16px;
        }

        .quiz-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
            margin-top: 20px;
        }

        #submitBtn {
            background-color: var(--color-button1);
            color: white;
        }

        #speakBtn {
            background-color: var(--color-button2);
            color: white;
        }

        #hintBtn {
            background-color: var(--color-button3);
            color: white;
        }

        #nextBtn {
            background-color: var(--color-button4);
            color: var(--color-text);
        }

        #closeBtn {
            background-color: var(--color-button5);
            color: white;
        }

        #feedback {
            margin-top: 15px;
            font-weight: bold;
            min-height: 24px;
        }

        #hint {
            margin-top: 10px;
            font-style: italic;
            min-height: 24px;
        }

        .section-title {
            margin-top: 30px;
            font-size: 18px;
            color: var(--color-primary);
            border-bottom: 2px solid var(--color-accent);
            padding-bottom: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Live U2: Shawn Mendes</h1>
        <button id="startLearningBtn">Start Learning!</button>

        <div class="section-title">First half (前半部)</div>
        <table id="vocabTable">
            <thead>
                <tr>
                    <th>Vocabulary</th>
                    <th>Chinese Translation</th>
                    <th>
                        <div style="display: flex; align-items: center;">
                            <span>Select</span>
                            <input type="checkbox" id="selectAll" style="margin-left: 10px;">
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody id="vocabBody">
                <!-- Table content will be dynamically added here -->
            </tbody>
        </table>

        <div class="section-title">Second half (後半部)</div>
        <table id="vocabTable2">
            <thead>
                <tr>
                    <th>Vocabulary</th>
                    <th>Chinese Translation</th>
                    <th>
                        <div style="display: flex; align-items: center;">
                            <span>Select</span>
                            <input type="checkbox" id="selectAll2" style="margin-left: 10px;">
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody id="vocabBody2">
                <!-- Table content will be dynamically added here -->
            </tbody>
        </table>
    </div>

    <div id="quizModal">
        <div class="quiz-content">
            <span class="close-btn" id="modalCloseBtn">&times;</span>
            <div id="promptText"></div>
            <input type="text" id="answerInput" placeholder="Type your answer...">
            <div id="feedback"></div>
            <div id="hint"></div>
            <div class="quiz-buttons">
                <button id="submitBtn">Submit</button>
                <button id="speakBtn">Speak</button>
                <button id="hintBtn">Hint</button>
                <button id="nextBtn">Next</button>
                <button id="closeBtn">Close</button>
            </div>
        </div>
    </div>

    <script>
        // Vocabulary data
        const vocabularyData = [
            // First half
            { word: "hit (n)", translation: "受歡迎or成功的事物", section: 1 },
            { word: "humanity (n)", translation: "1.人類(=humans) 2.仁慈(=kindness)", section: 1 },
            { word: "fame (n)", translation: "名聲", section: 1 },
            { word: "develop (v)", translation: "發展(v)", section: 1 },
            { word: "perform (v)", translation: "表演(v)", section: 1 },
            { word: "post (v)", translation: "(在網路上)發布", section: 1 },
            { word: "cover (n, v)", translation: "翻唱", section: 1 },
            { word: "artist (n)", translation: "藝術家", section: 1 },
            { word: "app (n)", translation: "應用程式", section: 1 },
            { word: "(video) clip (n)", translation: "影片片段", section: 1 },
            { word: "receive (v)", translation: "收到", section: 1 },
            { word: "attention (n)", translation: "注意(n)", section: 1 },
            { word: "go viral", translation: "(在網路上)快速傳播", section: 1 },
            { word: "gain (v)", translation: "獲得", section: 1 },
            { word: "sign (v)", translation: "1.簽名 2.與…簽約", section: 1 },
            { word: "record (n)", translation: "1.記錄 2.唱片、歌曲", section: 1 },
            { word: "album (n)", translation: "專輯", section: 1 },
            { word: "release (v, n)", translation: "發行(新歌、電影、書)", section: 1 },
            { word: "feature (v)", translation: "以...為特色；...的特色是...", section: 1 },
            { word: "single (n)", translation: "單曲", section: 1 },
            { word: "include (v)", translation: "包括", section: 1 },
            { word: "earn (v)", translation: "賺取", section: 1 },
            { word: "global (adj)", translation: "全球的", section: 1 },
            { word: "downside (n)", translation: "壞處", section: 1 },
            { word: "..., though. (adv)", translation: "但是、然而", section: 1 },
            { word: "cancel (v)", translation: "取消(v)", section: 1 },
            { word: "tour (n)", translation: "巡演", section: 1 },
            { word: "mental (adj)", translation: "心理的", section: 1 },
            { word: "issue (n)", translation: "1.議題 2.問題", section: 1 },
            { word: "explain (v)", translation: "解釋(v)", section: 1 },
            { word: "studio (n)", translation: "工作室", section: 1 },
            { word: "panic (n, v)", translation: "驚慌、恐慌", section: 1 },
            { word: "announce (v)", translation: "宣布(v)", section: 1 },
            { word: "debut (v, n)", translation: "初次登場", section: 1 },
            { word: "positive (adj)", translation: "正面的、積極的", section: 1 },
            { word: "review (n)", translation: "評論(n)", section: 1 },
            
            // Second half
            { word: "charity (n)", translation: "慈善(機構)", section: 2 },
            { word: "launch a missile", translation: "發射飛彈", section: 2 },
            { word: "launch a ship", translation: "(船)首航", section: 2 },
            { word: "launch a new product", translation: "推出新產品", section: 2 },
            { word: "foundation (n)", translation: "基金會", section: 2 },
            { word: "encourage (v)", translation: "鼓勵(v)", section: 2 },
            { word: "bring about", translation: "造成(b...)", section: 2 },
            { word: "support (v, n)", translation: "支援", section: 2 },
            { word: "creative (adj.)", translation: "有創意的", section: 2 },
            { word: "creative (n)", translation: "創意人員", section: 2 },
            { word: "various (adj)", translation: "各種各樣的", section: 2 },
            { word: "field (n)", translation: "領域", section: 2 },
            { word: "counter (v)", translation: "反擊", section: 2 },
            { word: "negative (adj)", translation: "負面的、消極的", section: 2 },
            { word: "be open about...", translation: "坦誠的、不隱瞞的", section: 2 },
            { word: "struggle (n, v)", translation: "掙扎", section: 2 },
            { word: "reveal (v)", translation: "透露、揭露", section: 2 },
            { word: "therapist (n)", translation: "治療師", section: 2 },
            { word: "deal with...", translation: "處理", section: 2 },
            { word: "pressure (n)", translation: "壓力", section: 2 },
            { word: "inspire (v)", translation: "啟發(v)", section: 2 },
            { word: "countless (adj)", translation: "無數的", section: 2 },
            { word: "seek (v)", translation: "尋找", section: 2 },
            { word: "common (adj)", translation: "常見的", section: 2 },
            { word: "achieve (v)", translation: "實現、達成", section: 2 },
            { word: "treatment (n)", translation: "1.對待(n) 2.治療(n)", section: 2 },
            { word: "vulnerable (adj)", translation: "脆弱的、易受傷的", section: 2 },
            { word: "vulnerability (n)", translation: "脆弱(n)、弱點", section: 2 },
            { word: "strength (n)", translation: "力量", section: 2 },
            { word: "remain (v)", translation: "維持(某狀態)", section: 2 },
            { word: "relatable (adj)", translation: "有共鳴的、可同理的", section: 2 },
            { word: "inspiring (adj.)", translation: "激勵人心的", section: 2 },
            { word: "figure (n)", translation: "(重要)人物", section: 2 },
            { word: "as such", translation: "因此(= therefore)", section: 2 },
            { word: "serve as...", translation: "有...功能、當…使用", section: 2 }
        ];

        // Initialize variables for quiz
        let selectedWords = [];
        let currentWordIndex = 0;
        let currentWord = null;
        let recognition = null;

        // Function to get word without parentheses
        function getCleanWord(word) {
            // Extract the word part before any parentheses
            return word.split(' (')[0].trim();
        }

        // Populate vocabulary tables
        function populateTables() {
            const table1 = document.getElementById('vocabBody');
            const table2 = document.getElementById('vocabBody2');
            
            vocabularyData.forEach((item, index) => {
                const row = document.createElement('tr');
                
                // Vocabulary column with speaker icon
                const vocabCell = document.createElement('td');
                vocabCell.textContent = item.word;
                
                const speakerIcon = document.createElement('span');
                speakerIcon.innerHTML = ' 🔊';
                speakerIcon.className = 'speaker-icon';
                speakerIcon.addEventListener('click', () => {
                    // Extract only the word part before parentheses for TTS
                    const textToSpeak = getCleanWord(item.word);
                    speakText(textToSpeak);
                });
                
                vocabCell.appendChild(speakerIcon);
                row.appendChild(vocabCell);
                
                // Translation column
                const translationCell = document.createElement('td');
                translationCell.textContent = item.translation;
                row.appendChild(translationCell);
                
                // Checkbox column
                const checkboxCell = document.createElement('td');
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.dataset.index = index;
                checkbox.className = 'word-checkbox';
                checkbox.dataset.section = item.section;
                checkboxCell.appendChild(checkbox);
                row.appendChild(checkboxCell);
                
                // Add to appropriate table
                if (item.section === 1) {
                    table1.appendChild(row);
                } else {
                    table2.appendChild(row);
                }
            });
        }

        // Function to speak text using TTS
        function speakText(text) {
            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'en-US';
            window.speechSynthesis.speak(utterance);
        }

        // Initialize Speech Recognition
        function initSpeechRecognition() {
            if ('webkitSpeechRecognition' in window) {
                recognition = new webkitSpeechRecognition();
            } else if ('SpeechRecognition' in window) {
                recognition = new SpeechRecognition();
            } else {
                alert("Speech recognition is not supported in your browser.");
                return;
            }

            recognition.lang = 'en-US';
            recognition.continuous = false;
            recognition.interimResults = false;

            recognition.onresult = function(event) {
                const transcript = event.results[0][0].transcript.toLowerCase().trim();
                document.getElementById('answerInput').value = transcript;
                document.getElementById('speakBtn').textContent = 'Speak';
            };

            recognition.onend = function() {
                document.getElementById('speakBtn').textContent = 'Speak';
            };

            recognition.onerror = function(event) {
                console.error('Speech recognition error:', event.error);
                document.getElementById('speakBtn').textContent = 'Speak';
            };
        }

        // Function to handle "Select All" checkboxes
        function setupSelectAll() {
            document.getElementById('selectAll').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.word-checkbox[data-section="1"]');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });

            document.getElementById('selectAll2').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.word-checkbox[data-section="2"]');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });
        }

        // Function to start the quiz
        function startQuiz() {
            // Get all selected words
            selectedWords = [];
            document.querySelectorAll('.word-checkbox:checked').forEach(checkbox => {
                const index = parseInt(checkbox.dataset.index);
                selectedWords.push(vocabularyData[index]);
            });

            if (selectedWords.length === 0) {
                alert("Please select at least one vocabulary word to start learning!");
                return;
            }

            // Shuffle the selected words
            shuffleArray(selectedWords);
            
            // Show the quiz modal
            document.getElementById('quizModal').style.display = 'flex';
            
            // Set the first word
            currentWordIndex = 0;
            setCurrentWord();
        }

        // Function to set the current word in the quiz
        function setCurrentWord() {
            currentWord = selectedWords[currentWordIndex];
            document.getElementById('promptText').textContent = `Say "${currentWord.translation}" in English.`;
            document.getElementById('answerInput').value = '';
            document.getElementById('feedback').textContent = '';
            document.getElementById('hint').textContent = '';
        }

        // Function to shuffle array
        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }

        // Function to check answer
        function checkAnswer() {
            const userAnswer = document.getElementById('answerInput').value.trim().toLowerCase();
            const correctAnswer = getCleanWord(currentWord.word).toLowerCase();
            
            // Remove all punctuation and symbols for comparison
            const normalizedUserAnswer = userAnswer.replace(/[^\w\s]/g, '');
            const normalizedCorrectAnswer = correctAnswer.replace(/[^\w\s]/g, '');
            
            if (normalizedUserAnswer === normalizedCorrectAnswer) {
                document.getElementById('feedback').textContent = 'Well done!';
                document.getElementById('feedback').style.color = 'green';
                speakText('Well done!');
            } else {
                document.getElementById('feedback').textContent = 'Try again!';
                document.getElementById('feedback').style.color = 'red';
                speakText('Try again!');
            }
        }

        // Function to show hint
        function showHint() {
            const correctAnswer = getCleanWord(currentWord.word);
            const firstLetter = correctAnswer.charAt(0).toUpperCase();
            document.getElementById('hint').textContent = `The word starts with "${firstLetter}"`;
        }

        // Function to go to next word
        function nextWord() {
            currentWordIndex = (currentWordIndex + 1) % selectedWords.length;
            setCurrentWord();
        }

        // Initialize the app
        document.addEventListener('DOMContentLoaded', function() {
            populateTables();
            setupSelectAll();
            initSpeechRecognition();
            
            // Start learning button
            document.getElementById('startLearningBtn').addEventListener('click', startQuiz);
            
            // Submit button
            document.getElementById('submitBtn').addEventListener('click', checkAnswer);
            
            // Speak button
            document.getElementById('speakBtn').addEventListener('click', function() {
                if (recognition) {
                    this.textContent = 'Recording...';
                    recognition.start();
                }
            });
            
            // Hint button
            document.getElementById('hintBtn').addEventListener('click', showHint);
            
            // Next button
            document.getElementById('nextBtn').addEventListener('click', nextWord);
            
            // Close button and X button
            document.getElementById('closeBtn').addEventListener('click', function() {
                document.getElementById('quizModal').style.display = 'none';
            });
            
            document.getElementById('modalCloseBtn').addEventListener('click', function() {
                document.getElementById('quizModal').style.display = 'none';
            });
            
            // Enter key to submit
            document.getElementById('answerInput').addEventListener('keyup', function(event) {
                if (event.key === 'Enter') {
                    checkAnswer();
                }
            });
        });
    </script>
</body>
</html>
