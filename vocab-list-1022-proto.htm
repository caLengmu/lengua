<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vocabulary List</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            border-radius: 8px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        h1 {
            text-align: center;
            margin-bottom: 30px;
            color: #2c3e50;
            font-size: 2.5em;
        }

        .button-categories {
            margin-bottom: 30px;
        }

        .category {
            margin-bottom: 25px;
        }

        .category-title {
            font-size: 1.5em;
            font-weight: bold;
            margin-bottom: 10px;
            color: #34495e;
            border-bottom: 2px solid #3498db;
            padding-bottom: 5px;
            display: inline-block;
        }

        .category-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .vocab-btn {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .vocab-btn:hover {
            background-color: #2980b9;
        }

        .vocab-btn.active {
            background-color: #e74c3c;
        }

        /* Quiz Section */
        .quiz-section {
            margin: 30px 0;
            text-align: center;
            padding: 20px;
            background-color: #fff3cd;
            border-radius: 8px;
            border: 2px solid #ffc107;
        }

/* Section Selector */
        .section-selector-area {
            margin: 20px 0;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #dee2e6;
        }

        .section-selector-title {
            font-weight: bold;
            font-size: 16px;
            color: #2c3e50;
            margin-bottom: 15px;
        }

        .section-checkboxes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 12px;
        }

        .section-checkbox-item {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px;
            background-color: white;
            border-radius: 5px;
            border: 1px solid #e0e0e0;
        }

        .section-checkbox-item input[type="checkbox"] {
            width: 20px;
            height: 20px;
            cursor: pointer;
        }

        .section-checkbox-item label {
            cursor: pointer;
            font-size: 14px;
            color: #333;
            user-select: none;
            flex: 1;
        }

        .section-checkbox-item:hover {
            background-color: #f0f0f0;
        }

        @media (max-width: 768px) {
            .section-selector-area {
                padding: 15px;
                margin: 15px 0;
            }

            .section-selector-title {
                font-size: 14px;
            }

            .section-checkboxes-grid {
                grid-template-columns: 1fr;
                gap: 8px;
            }

            .section-checkbox-item {
                padding: 10px;
            }

            .section-checkbox-item input[type="checkbox"] {
                width: 18px;
                height: 18px;
            }

            .section-checkbox-item label {
                font-size: 13px;
            }
        }

        .quiz-btn {
            background-color: #ffc107;
            color: #333;
            border: none;
            padding: 15px 30px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .quiz-btn:hover {
            background-color: #ffb300;
        }

        .speed-control-section {
            margin: 30px 0;
            text-align: center;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 5px;
            border: 1px solid #e9ecef;
        }

        .speed-label {
            font-weight: bold;
            color: #495057;
            margin-right: 15px;
            font-size: 16px;
        }

        .speed-btn {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 8px 16px;
            margin: 0 5px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .speed-btn:hover {
            background-color: #5a6268;
        }

        .speed-btn.active-speed {
            background-color: #28a745;
        }

        .study-partner-section {
            margin: 30px 0;
            text-align: center;
            padding: 20px;
            background-color: #e8f4f8;
            border-radius: 8px;
        }

        .study-partner-btn {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
        }

        .study-partner-btn:hover {
            background-color: #218838;
        }

        .vocab-table-container {
            margin-top: 30px;
            overflow-x: auto;
        }

        .vocab-table {
            width: 100%;
            border-collapse: collapse;
            background-color: white;
        }

        .section-header {
            background-color: #ecf0f1;
            font-weight: bold;
            padding: 15px;
            text-align: left;
            font-size: 1.5em;
            color: #2c3e50;
        }

        .vocab-row {
            border-bottom: 1px solid #ddd;
        }

        .audio-controls {
            width: 80px;
            text-align: center;
            padding: 15px 10px;
            vertical-align: top;
        }

        .content-cell {
            padding: 15px;
            vertical-align: top;
        }

        .vocab-word {
            font-weight: bold;
            font-size: 1.5em;
            color: #2c3e50;
            margin-bottom: 8px;
        }

        .example-sentence {
            font-size: 1.5em;
            color: #555;
            line-height: 1.5;
        }

        .audio-btn {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 20px;
            margin: 2px;
            padding: 5px;
            border-radius: 3px;
            transition: background-color 0.3s;
        }

        .audio-btn:hover {
            background-color: #f0f0f0;
        }

        .play-btn {
            color: #27ae60;
        }

        .stop-btn {
            color: #e74c3c;
        }

        .no-data {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
            font-size: 20px;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            overflow-y: auto;
        }

        .modal-content {
            background-color: white;
            margin: 20px auto;
            padding: 25px;
            border-radius: 8px;
            width: 95%;
            max-width: 600px;
            position: relative;
        }

        .close {
            color: #aaa;
            position: absolute;
            right: 15px;
            top: 10px;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
            z-index: 10;
        }

        .close:hover {
            color: #000;
        }

        /* Listen and Choose Quiz Styles - Mobile Optimized */
        .quiz-modal-content {
            margin: 5px auto;
            padding: 15px;
            max-height: 98vh;
            display: flex;
            flex-direction: column;
        }

        .quiz-header {
            text-align: center;
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 1.3em;
            padding-right: 30px;
        }

        @media (max-width: 768px) {
            .section-selector {
                max-height: 120px;
                padding: 10px;
            }

            .section-selector-title {
                font-size: 13px;
            }

            .section-item label {
                font-size: 12px;
            }
        }

        .listen-answer-section {
            text-align: center;
            padding: 12px;
            background-color: #f8f9fa;
            border-radius: 8px;
            margin-bottom: 10px;
        }

.listen-answer-display {
            font-size: 18px;
            font-weight: bold;
            color: #2c3e50;
            min-height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            line-height: 1.4;
            margin-bottom: 8px;
        }

        .listen-speaker {
            font-size: 40px;
            cursor: pointer;
            display: inline-block;
            transition: transform 0.2s;
        }

        .listen-speaker:hover {
            transform: scale(1.1);
        }

        .listen-speaker:active {
            transform: scale(0.95);
        }

        .timer-feedback-section {
            text-align: center;
            margin: 8px 0;
            min-height: 25px;
        }

        .timer-feedback {
            font-size: 15px;
            font-weight: bold;
        }

        .timer-feedback.correct {
            color: #28a745;
        }

        .timer-feedback.incorrect {
            color: #dc3545;
        }

        .choices-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 8px;
            margin: 10px 0;
            flex-grow: 1;
        }

.choice-btn {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 10px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.3s;
            min-height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            line-height: 1.4;
        }

        .choice-btn:hover:not(:disabled) {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .choice-btn:disabled {
            cursor: not-allowed;
            opacity: 0.6;
        }

        .choice-btn.correct {
            background-color: #28a745;
            animation: pulse-correct 0.5s;
        }

        .choice-btn.incorrect {
            background-color: #dc3545;
            animation: shake 0.5s;
        }

        @keyframes pulse-correct {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-10px); }
            75% { transform: translateX(10px); }
        }

        .listen-controls {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #e9ecef;
        }

        .listen-next-btn, .listen-close-btn {
            padding: 10px 25px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 15px;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .listen-next-btn {
            background-color: #28a745;
            color: white;
        }

        .listen-next-btn:hover:not(:disabled) {
            background-color: #218838;
        }

        .listen-next-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .listen-close-btn {
            background-color: #6c757d;
            color: white;
        }

        .listen-close-btn:hover {
            background-color: #5a6268;
        }

.quiz-complete {
            text-align: center;
            padding: 20px;
            grid-column: 1 / -1;
            width: 100%;
        }

        .quiz-complete h3 {
            color: #28a745;
            font-size: 24px;
            margin-bottom: 15px;
        }

        .quiz-score {
            font-size: 20px;
            color: #2c3e50;
            margin-bottom: 15px;
        }

        .restart-quiz-btn {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 15px;
            font-weight: bold;
        }

        .restart-quiz-btn:hover {
            background-color: #2980b9;
        }

        .partner-selection {
            text-align: center;
        }

        .partner-selection h2 {
            color: #2c3e50;
            margin-bottom: 30px;
        }

        .partners-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .partner-card {
            background-color: #f8f9fa;
            border: 2px solid #dee2e6;
            border-radius: 5px;
            padding: 20px;
            text-align: center;
        }

        .partner-image {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background-color: #e9ecef;
            overflow: hidden;
            margin: 0 auto 15px;
        }

        .partner-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .select-partner-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 14px;
        }

        .select-partner-btn:hover {
            background-color: #0056b3;
        }

        .study-session {
            text-align: center;
        }

        .partner-display {
            margin-bottom: 30px;
        }

        .partner-avatar {
            width: 130px;
            height: 130px;
            border-radius: 50%;
            background-color: #e9ecef;
            overflow: hidden;
            margin: 0 auto 20px;
        }

        .partner-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .speech-bubble {
            background-color: #f8f9fa;
            border: 2px solid #dee2e6;
            padding: 20px;
            border-radius: 10px;
            margin: 0 auto 20px;
            max-width: 500px;
        }

        .current-word {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .current-example {
            font-size: 20px;
            margin-bottom: 15px;
        }

        .bubble-controls {
            margin-bottom: 15px;
        }

        .bubble-btn {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 20px;
            margin: 0 5px;
            padding: 5px;
            border-radius: 3px;
            transition: background-color 0.3s;
        }

        .bubble-btn:hover {
            background-color: #f0f0f0;
        }

        .bubble-btn.play-btn {
            color: #27ae60;
        }

        .bubble-btn.stop-btn {
            color: #e74c3c;
        }

        .progress-info {
            margin-bottom: 20px;
            font-size: 17px;
            color: #666;
        }

        .navigation-controls {
            display: flex;
            justify-content: center;
            gap: 10px;
            flex-wrap: wrap;
        }

        .nav-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 17px;
        }

        .nav-btn:hover:not(:disabled) {
            background-color: #0056b3;
        }

        .nav-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .learn-again-btn {
            background-color: #28a745 !important;
        }

        .learn-again-btn:hover {
            background-color: #218838 !important;
        }

        .congratulations {
            background-color: #d1ecf1;
            border: 1px solid #bee5eb;
            color: #0c5460;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .congratulations h3 {
            margin-bottom: 10px;
        }

        @media (max-width: 768px) {
            body {
                padding: 10px;
            }

            .container {
                padding: 15px;
            }

            h1 {
                font-size: 1.8em;
                margin-bottom: 20px;
            }

            .category-title {
                font-size: 1.2em;
            }

            .vocab-btn {
                padding: 10px 15px;
                font-size: 13px;
            }

            .quiz-section {
                padding: 15px;
                margin: 20px 0;
            }

            .quiz-btn {
                padding: 12px 20px;
                font-size: 16px;
            }

            .speed-control-section {
                padding: 10px;
            }

            .speed-label {
                display: block;
                margin-bottom: 10px;
                margin-right: 0;
            }

            .speed-btn {
                padding: 8px 12px;
                font-size: 13px;
                margin: 2px;
            }

            .study-partner-section {
                padding: 15px;
            }

            .study-partner-btn {
                padding: 12px 20px;
                font-size: 16px;
            }

            .section-header {
                font-size: 1.2em;
                padding: 12px;
            }

            .section-checkbox {
                width: 18px;
                height: 18px;
            }

            .audio-controls {
                width: 60px;
                padding: 10px 5px;
            }

            .content-cell {
                padding: 12px;
            }

.vocab-word {
                font-size: 2.4em;
            }

            .example-sentence {
                font-size: 2.2em;
            }

            .current-word {
                font-size: 36px;
            }

            .current-example {
                font-size: 36px;
            }

            /* Quiz Modal Mobile Optimization */
            .modal-content {
                width: 98%;
                margin: 5px auto;
                padding: 12px;
            }

            .quiz-modal-content {
                max-height: 97vh;
                padding: 10px;
            }

            .quiz-header {
                font-size: 1.1em;
                margin-bottom: 10px;
            }

            .listen-answer-section {
                padding: 10px;
                margin-bottom: 8px;
            }

.listen-answer-display {
                font-size: 16px;
                min-height: 50px;
                line-height: 1.3;
            }

            .listen-speaker {
                font-size: 36px;
            }

            .timer-feedback {
                font-size: 13px;
            }

            .choices-grid {
                gap: 6px;
                margin: 8px 0;
            }

.choice-btn {
                font-size: 15px;
                padding: 10px 8px;
                min-height: 55px;
                line-height: 1.3;
            }

            .listen-controls {
                gap: 8px;
                margin-top: 8px;
                padding-top: 8px;
            }

            .listen-next-btn, .listen-close-btn {
                padding: 8px 20px;
                font-size: 14px;
            }

            .partners-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            .partner-image {
                width: 60px;
                height: 60px;
            }

            .partner-avatar {
                width: 100px;
                height: 100px;
            }

            .speech-bubble {
                padding: 15px;
            }

            .current-word {
                font-size: 18px;
            }

            .current-example {
                font-size: 18px;
            }

            .navigation-controls {
                gap: 5px;
            }

            .nav-btn {
                padding: 8px 12px;
                font-size: 15px;
            }
        }

@media (max-width: 400px) {
            .quiz-header {
                font-size: 1em;
            }

            .listen-answer-display {
                font-size: 14px;
                min-height: 45px;
            }

            .choice-btn {
                font-size: 13px;
                min-height: 50px;
                padding: 8px 6px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Vocabulary List (10.22 proto)</h1>

        <div class="button-categories">
            <div class="category">
                <div class="category-title">Textbook</div>
                <div class="category-buttons">
                    <button class="vocab-btn" data-category="textbook" data-lesson="textbook1">B3 L4</button>
                    <button class="vocab-btn" data-category="textbook" data-lesson="textbook2">B3 L5</button>
                    <button class="vocab-btn" data-category="textbook" data-lesson="textbook3">B3 L6 (自読)</button>
                </div>
            </div>

            <div class="category">
                <div class="category-title">Magazine</div>
                <div class="category-buttons">
                    <button class="vocab-btn" data-category="magazine" data-lesson="maga1">U2</button>
                    <button class="vocab-btn" data-category="magazine" data-lesson="maga2">U7 (自読)</button>
                    <button class="vocab-btn" data-category="magazine" data-lesson="maga3">U12</button>
                    <button class="vocab-btn" data-category="magazine" data-lesson="maga4">U13 (自読)</button>
                </div>
            </div>         

<div class="category">
                <div class="category-title">核心字彙</div>
                <div class="category-buttons">
                    <button class="vocab-btn" data-category="core" data-lesson="core1">P2 U4</button>
                    <button class="vocab-btn" data-category="core" data-lesson="core2">P2 U5</button>
                    <button class="vocab-btn" data-category="core" data-lesson="core3">P2 U6</button>
                </div>
            </div>
        </div>

        <!-- Study Partner Section -->
        <div class="study-partner-section">
            <button class="study-partner-btn" id="choosePartnerBtn">
                👬 Choose Your Study Partner (選學伴)
            </button>
        </div>

<!-- Listen and Choose Quiz Section -->
        <div class="quiz-section">
            <button class="quiz-btn" id="listenChooseBtn">
                🎧 Listen and Choose (聽力測驗)
            </button>
        </div>

        <!-- Section Selector -->
        <div class="section-selector-area" id="sectionSelectorArea" style="display: none;">
            <div class="section-selector-title">📋 Select sections for quiz (選擇測驗範圍):</div>
            <div class="section-checkboxes-grid" id="sectionCheckboxesGrid"></div>
        </div>

        <!-- Speed Control -->
        <div class="speed-control-section">
            <span class="speed-label">Speed:</span>
            <button class="speed-btn" data-speed="1.2">1.2x</button>
            <button class="speed-btn active-speed" data-speed="1.0">1x</button>
            <button class="speed-btn" data-speed="0.8">0.8x</button>
            <button class="speed-btn" data-speed="0.6">0.6x</button>
        </div>

        <!-- Table -->
        <div class="vocab-table-container">
            <table class="vocab-table" id="vocabTable">
                <tbody id="vocabTableBody">
                    <tr class="no-data">
                        <td colspan="2">Select a lesson to load vocabulary (選擇單元以載入字彙)</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Welcome Notice Modal -->
    <div id="welcomeModal" class="modal" style="display: block;">
        <div class="modal-content" style="max-width: 500px;">
            <div style="text-align: center; padding: 10px;">
                <h2 style="color: #2c3e50; margin-bottom: 20px;">📢 Important Notice</h2>
                <div style="text-align: left; font-size: 16px; line-height: 1.8; margin-bottom: 25px;">
                    <p style="margin-bottom: 15px; color: red; text-align: center;"><strong>1. 每次使用請點擊「重新整理(refresh)🔄」以獲取更新！</strong></p>
                    <p style="margin-bottom: 0; text-align: center;">2. 手機有時會更新「文字轉語音」功能，導致🔊無法運作，重開機即可解決。</p>
                </div>
                <button id="welcomeOkBtn" style="background-color: #28a745; color: white; border: none; padding: 12px 40px; border-radius: 5px; cursor: pointer; font-size: 16px; font-weight: bold;">
                    OK. I got it.
                </button>
            </div>
        </div>
    </div>

<!-- Listen and Choose Modal -->
    <div id="listenChooseModal" class="modal">
        <div class="modal-content quiz-modal-content">
            <span class="close" id="closeListenChoose">&times;</span>
<h2 class="quiz-header">🎧 Listen and Choose</h2>
            <div class="listen-answer-section">
                <div id="listenAnswerDisplay" class="listen-answer-display">Click the speaker to hear</div>
                <div class="listen-speaker" id="listenSpeaker" title="Play Audio">🔊</div>
            </div>
            <div class="timer-feedback-section">
                <div id="timerFeedback" class="timer-feedback"></div>
            </div>
            <div id="choicesGrid" class="choices-grid"></div>
            <div class="listen-controls">
                <button id="listenNextBtn" class="listen-next-btn">Next</button>
                <button id="listenCloseBtn" class="listen-close-btn">Close</button>
            </div>
        </div>
    </div>

    <!-- Partner Selection Modal -->
    <div id="partnerModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closePartnerModal">&times;</span>
            <div class="partner-selection">
                <h2>Choose Your Study Partner</h2>
                <div class="partners-grid">
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner1.jpg" alt="partner 1">
                        </div>
                        <button class="select-partner-btn" data-partner="1">Shawn Mendes</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner2.jpg" alt="partner 2">
                        </div>
                        <button class="select-partner-btn" data-partner="2">Taylor Swift</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner3.jpg" alt="partner 3">
                        </div>
                        <button class="select-partner-btn" data-partner="3">Rosé</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner4.jpg" alt="partner 4">
                        </div>
                        <button class="select-partner-btn" data-partner="4">전원우</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner5.jpg" alt="partner 5">
                        </div>
                        <button class="select-partner-btn" data-partner="5">강태현</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner6.jpg" alt="partner 6">
                        </div>
                        <button class="select-partner-btn" data-partner="6">IU</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner7.jpg" alt="partner 7">
                        </div>
                        <button class="select-partner-btn" data-partner="7">Asa</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner8.jpg" alt="partner 8">
                        </div>
                        <button class="select-partner-btn" data-partner="8">金城武</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner9.jpg" alt="partner 9">
                        </div>
                        <button class="select-partner-btn" data-partner="9">佐藤 健</button>
                    </div>
                    <div class="partner-card">
                        <div class="partner-image">
                            <img src="partner10.jpg" alt="partner 10">
                        </div>
                        <button class="select-partner-btn" data-partner="10">初音ミク</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Study Session Modal -->
    <div id="studyModal" class="modal">
        <div class="modal-content">
            <span class="close" id="closeStudyModal">&times;</span>
            <div class="study-session">
                <div class="partner-display">
                    <div class="partner-avatar" id="currentPartnerAvatar">
                        <img src="partner1.jpg" alt="partner 1">
                    </div>
                    <div class="speech-bubble" id="speechBubble">
                        <div class="current-word" id="currentWord">Select a lesson first!</div>
                        <div class="current-example" id="currentExample">Please choose a lesson from the main page before starting your study session.</div>
                        <div class="bubble-controls">
                            <button class="bubble-btn play-btn" id="speakCurrentBtn">🔊</button>
                            <button class="bubble-btn stop-btn" id="stopCurrentBtn">⏹</button>
                        </div>
                    </div>
                </div>
                <div class="progress-info" id="progressInfo">
                    Ready to start!
                </div>
                <div class="navigation-controls" id="navigationControls">
                    <button class="nav-btn" id="backBtn">← Back</button>
                    <button class="nav-btn" id="nextBtn">Next →</button>
                    <button class="nav-btn" id="nextSectionBtn">Next Section</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Built-in database - can be expanded
        const vocabDatabase = {
            textbook1: [
  
],
            
            'textbook2': [
{
"section": "◎Paragraph 1",
"words": [
{"word": "bright and colorful (adj phr.) (明亮又繽紛的):", "example": "The festival decorations are bright and colorful. (節慶裝飾明亮又繽紛。)"},
{"word": "delight someone (v phr.) (使某人開心):", "example": "The performance delighted the audience. (這場表演讓觀眾感到開心。)"},
{"word": "tourist (n) (觀光客):", "example": "Many tourists visit Japan every spring. (每年春天有許多觀光客造訪日本。)"},
{"word": "throughout the year (phr.) (全年):", "example": "The park is open throughout the year. (這座公園全年開放。)"},
{"word": "romance is in the air (phr.) (浪漫氣息瀰漫):", "example": "During the cherry blossom season, romance is in the air. (櫻花季時，浪漫氣息瀰漫。)"},
{"word": "be filled with… (phr.) (充滿…):", "example": "The garden is filled with blooming flowers. (花園裡開滿了花。)"},
{"word": "a sea of pink cherry blossoms (phr.) (一片粉紅櫻花海):", "example": "We walked through a sea of pink cherry blossoms. (我們走在粉紅櫻花海中。)"},
{"word": "(leaves) rustle in the wind (phr.) ((樹葉)在風中沙沙作響):", "example": "The leaves rustled in the wind softly. (樹葉在風中輕輕沙沙作響。)"},
{"word": "sparkle in the sunshine (phr.) (在陽光下閃耀):", "example": "The lake sparkled in the sunshine. (湖面在陽光下閃閃發光。)"},
{"word": "maple leaves (n) (楓葉):", "example": "Maple leaves turn red in autumn. (楓葉在秋天變紅。)"},
{"word": "set… on fire (phr.) (點燃…):", "example": "The sunset set the sky on fire. (夕陽把天空染成火紅。)"},
{"word": "landscape (n) (風景):", "example": "The mountain landscape is stunning. (山景令人驚嘆。)"},
{"word": "turn… into… (phr.) (把…變成…):", "example": "Snow turns the city into a winter wonderland. (雪讓城市變成冬季仙境。)"},
{"word": "the whole city (n phr.) (整座城市):", "example": "The whole city celebrates the festival. (整座城市都在慶祝這個節日。)"},
{"word": "silver (adj/n) (銀色的／銀):", "example": "The mountains were covered in silver snow. (群山覆蓋著銀白色的雪。)"},
{"word": "kingdom (n) (王國):", "example": "The theme park is a magical kingdom. (這座主題樂園是一個魔幻王國。)"}
]
},
{
"section": "◎Paragraph 2",
"words": [
{"word": "apart from… (prep.) (除了…之外):", "example": "Apart from Tokyo, I’ve also been to Osaka. (除了東京之外，我也去過大阪。)"},
{"word": "splendor (n) (壯麗、輝煌):", "example": "The palace is famous for its splendor. (這座宮殿以其壯麗聞名。)"},
{"word": "feast one’s eyes on… (phr.) (盡情欣賞…):", "example": "Visitors can feast their eyes on the view. (遊客可以盡情欣賞美景。)"},
{"word": "previously (adv) (先前、以前):", "example": "She had previously visited Kyoto. (她先前去過京都。)"},
{"word": "capital (city) (n) (首都):", "example": "Tokyo is the capital of Japan. (東京是日本的首都。)"},
{"word": "boast (v) (1.誇耀、吹噓):", "example": "He always boasts about his success. (他總是誇耀自己的成功。)"},
{"word": "boast (v) (2.擁有(值得自豪的東西)):", "example": "The temple boasts beautiful gardens. (這座寺廟擁有美麗的庭園。)"},
{"word": "a large/small number of… (phr.) (許多／少數的…):", "example": "A large number of tourists visit each year. (每年都有許多遊客造訪。)"},
{"word": "historic (adj) (歷史性的):", "example": "Kyoto is full of historic landmarks. (京都充滿了歷史地標。)"},
{"word": "shrine (n) (神社):", "example": "They prayed at the ancient shrine. (他們在古老的神社祈禱。)"},
{"word": "temple (n) (寺廟):", "example": "This temple attracts many visitors. (這座寺廟吸引了許多遊客。)"},
{"word": "landmark (n) (地標):", "example": "The Eiffel Tower is a famous landmark. (艾菲爾鐵塔是著名的地標。)"},
{"word": "pavilion (n) (涼亭、亭閣):", "example": "The pavilion stands beside the pond. (涼亭坐落在池塘旁。)"},
{"word": "main entrance (n phr.) (正門):", "example": "We met at the main entrance of the museum. (我們在博物館的正門碰面。)"},
{"word": "come into view (phr.) (映入眼簾):", "example": "The temple came into view as we climbed the hill. (當我們爬上山時，寺廟映入眼簾。)"},
{"word": "magnificent (adj) (壯麗的):", "example": "The magnificent palace impressed everyone. (這座壯麗的宮殿讓大家印象深刻。)"},
{"word": "a three-story building (n phr.) (三層樓建築):", "example": "They live in a three-story building. (他們住在一棟三層樓的建築裡。)"},
{"word": "rise up (phr.) (聳立):", "example": "Tall towers rose up above the city. (高塔聳立在城市上方。)"},
{"word": "crystal (n) (水晶):", "example": "The chandelier was made of crystal. (那盞吊燈是由水晶製成的。)"},
{"word": "a crystal-clear pond (n phr.) (清澈見底的池塘):", "example": "Fish swam in the crystal-clear pond. (魚兒在清澈見底的池塘裡游動。)"},
{"word": "be covered in… (phr.) (覆蓋著…):", "example": "The mountains are covered in snow. (群山覆蓋著白雪。)"},
{"word": "be crowned with… (phr.) (頂上有…):", "example": "The tower was crowned with a golden statue. (塔頂上有一座金色雕像。)"},
{"word": "bronze (n) (青銅):", "example": "The statue is made of bronze. (這座雕像是青銅製成的。)"},
{"word": "phoenix (n) (鳳凰):", "example": "A bronze phoenix stood on the roof. (屋頂上站著一隻青銅鳳凰。)"},
{"word": "shimmer (v) (閃爍、閃光):", "example": "The water shimmered in the sunlight. (水面在陽光下閃閃發光。)"},
{"word": "the reflection of… (n phr.) (…的倒影):", "example": "We saw the reflection of the building in the pond. (我們看到建築物在池塘中的倒影。)"},
{"word": "the glassy surface of the pond (n phr.) (池塘如鏡的水面):", "example": "The moon shone on the glassy surface of the pond. (月光照耀在池塘如鏡的水面上。)"},
{"word": "a breathtaking sight (n phr.) (令人屏息的景象):", "example": "The sunrise over the mountain was a breathtaking sight. (山上的日出景象令人屏息。)"},
{"word": "take a leisurely walk (phr.) (悠閒地散步):", "example": "We took a leisurely walk through the garden. (我們在花園裡悠閒地散步。)"},
{"word": "surround (v) (環繞):", "example": "The temple is surrounded by trees. (寺廟被樹木環繞。)"},
{"word": "stunning (adj) (極美的、令人驚艷的):", "example": "She wore a stunning red dress. (她穿著一件驚艷的紅洋裝。)"},
{"word": "structure (n) (建築物、構造):", "example": "The ancient structure still stands today. (這座古老建築至今仍屹立不搖。)"}
]
},
{
"section": "◎Paragraph 3",
"words": [
{"word": "unforgettable (adj) (難忘的):", "example": "It was an unforgettable experience. (那是一段難忘的經歷。)"},
{"word": "involve (v) (涉及、包含):", "example": "The job involves working with people. (這份工作涉及與人合作。)"},
{"word": "come face to face with… (phr.) (面對…):", "example": "We came face to face with a wild deer. (我們正面遇上一頭野鹿。)"},
{"word": "delicate (adj) (精緻的、柔弱的):", "example": "The artist painted delicate flowers. (那位藝術家畫出了精緻的花朵。)"},
{"word": "silk (n) (絲綢):", "example": "The kimono is made of silk. (這件和服是用絲綢做的。)"},
{"word": "sleeve(s) (n) (袖子):", "example": "Her long sleeves moved gracefully. (她的長袖優雅地飄動。)"},
{"word": "distinctive (adj) (獨特的):", "example": "She has a distinctive voice. (她有一個獨特的聲音。)"},
{"word": "makeup (n) (化妝):", "example": "She put on light makeup for the event. (她為活動畫了淡妝。)"},
{"word": "lipstick (n) (口紅):", "example": "She wore red lipstick. (她擦了紅色口紅。)"},
{"word": "elegant (adj) (優雅的):", "example": "Her dress was simple but elegant. (她的洋裝簡單卻優雅。)"},
{"word": "hairpin (n) (髮簪):", "example": "The dancer wore a golden hairpin. (那位舞者戴著金色髮簪。)"},
{"word": "appearance (n) (外貌):", "example": "Her appearance attracted everyone’s attention. (她的外貌吸引了大家的注意。)"},
{"word": "stand out (from the crowd) (phr.) (脫穎而出):", "example": "Her talent made her stand out from the crowd. (她的才能讓她脫穎而出。)"},
{"word": "highly skilled (adj) (技藝高超的):", "example": "He’s a highly skilled chef. (他是一位技藝高超的廚師。)"},
{"word": "entertainer (n) (表演者):", "example": "She works as a professional entertainer. (她是一位職業表演者。)"},
{"word": "master (v) (精通):", "example": "He mastered the piano after years of practice. (他經過多年練習精通了鋼琴。)"},
{"word": "musical instrument (n phr.) (樂器):", "example": "The shamisen is a traditional Japanese musical instrument. (三味線是一種日本傳統樂器。)"},
{"word": "literature (n) (文學):", "example": "She studied English literature at university. (她在大學學習英國文學。)"},
{"word": "perform (v) (表演):", "example": "They performed on stage beautifully. (他們在舞台上有精彩的表演。)"},
{"word": "ancient (adj) (古老的):", "example": "Kyoto has many ancient temples. (京都有許多古老的寺廟。)"},
{"word": "combine (v) (結合):", "example": "This dance combines art and tradition. (這種舞蹈結合了藝術與傳統。)"},
{"word": "deliberate movements (n phr.) (優雅而慎重的動作):", "example": "Her deliberate movements showed grace and control. (她優雅而慎重的動作展現了控制力。)"},
{"word": "express deep emotion (phr.) (表達深層情感):", "example": "The performance expressed deep emotion. (那場表演表達了深層的情感。)"}
]
},
{
"section": "◎Paragraph 4",
"words": [
{"word": "flow (v) (流動):", "example": "The river flows through the city. (這條河流經過城市。)"},
{"word": "graceful motions (n phr.) (優雅的動作):", "example": "She danced with graceful motions. (她以優雅的動作跳舞。)"},
{"word": "regardless of… (phr.) (不論…):", "example": "Everyone is welcome, regardless of age. (不論年齡，人人皆可參加。)"},
{"word": "a must-see destination (n phr.) (必遊景點):", "example": "Kyoto is a must-see destination for travelers. (京都是旅客必遊的景點。)"},
{"word": "seek (v) (尋找、追求):", "example": "They seek peace and happiness. (他們追求和平與幸福。)"},
{"word": "authentic (adj) (道地的、真實的):", "example": "We tried authentic Japanese cuisine. (我們品嚐了道地的日本料理。)"},
{"word": "those who… (phr.) (…的人):", "example": "Those who love history will enjoy Kyoto. (喜歡歷史的人會喜歡京都。)"},
{"word": "be likely to… (phr.) (可能會…):", "example": "It’s likely to rain tomorrow. (明天可能會下雨。)"},
{"word": "end up (+ V-ing) (phr.) (最終…):", "example": "We ended up staying longer than planned. (我們最後待得比預期久。)"},
{"word": "fall in love with… (phr.) (愛上…):", "example": "You’ll fall in love with the city’s beauty. (你會愛上這座城市的美。)"}
]
}

],
            'textbook3': [
  

],
            'maga1': [

  
],
            'maga2': [

 
],
            'maga3': [

 ],
            'maga4': [
  
],
            'core1': [


],
            'core2': [


],
            'core3': [

]

        }; // End of database

        // Partner configurations
        const partners = {
            1: { image: 'partner1.jpg', name: 'Shawn Mendes' },
            2: { image: 'partner2.jpg', name: 'Taylor Swift' },
            3: { image: 'partner3.jpg', name: 'Rosé' },
            4: { image: 'partner4.jpg', name: '전원우' },
            5: { image: 'partner5.jpg', name: '강태현' },
            6: { image: 'partner6.jpg', name: 'IU' },
            7: { image: 'partner7.jpg', name: 'Asa' },
            8: { image: 'partner8.jpg', name: '金城武' },
            9: { image: 'partner9.jpg', name: '佐藤 健' },
            10: { image: 'partner10.jpg', name: '初音ミク' }
        };

        // Global state
        let currentLessonData = null;
        let currentPartner = null;
        let currentWordIndex = 0;
        let flatWordsList = [];
        let currentSpeech = null;
        let speechRate = 1.0;
        let voices = [];
        let isCompleted = false;
        let checkedSections = new Set();

        // Quiz state
        let quizWords = [];
        let currentQuizIndex = 0;
        let quizScore = 0;
        let hasAnswered = false;
        let correctAnswer = null;

        // Load voices
        function loadVoices() {
            voices = speechSynthesis.getVoices();
            if (!voices.length) {
                const dummy = new SpeechSynthesisUtterance('');
                speechSynthesis.speak(dummy);
                voices = speechSynthesis.getVoices();
            }
        }

        // Get English voice
        function getEnglishVoice() {
            if (!voices.length) loadVoices();
            let voice = voices.find(v => v.name.includes('Samantha')) || 
                       voices.find(v => v.lang === 'en-US');
            return voice || null;
        }

        // Clean text for TTS
        function cleanTextForTTS(text) {
            return text.replace(/\*/g, '')
                      .replace(/\//g, '')
                      .replace(/\([^)]*\)/g, '')
                      .replace(/\[[^\]]*\]/g, '')
                      .replace(/\s+/g, ' ')
                      .trim();
        }

        // Speak text
        function speakText(text) {
            stopSpeech();
            const cleaned = cleanTextForTTS(text);
            if (!cleaned) return;

            const utterance = new SpeechSynthesisUtterance(cleaned);
            utterance.lang = 'en-US';
            utterance.rate = speechRate;

            const voice = getEnglishVoice();
            if (voice) utterance.voice = voice;

            utterance.onend = () => {
                currentSpeech = null;
            };

            currentSpeech = utterance;
            speechSynthesis.speak(utterance);
        }

        // Stop speech
        function stopSpeech() {
            if (speechSynthesis.speaking || speechSynthesis.pending) {
                speechSynthesis.cancel();
            }
            currentSpeech = null;
        }

        // Load vocabulary with checkboxes
        function loadVocabulary(lessonKey) {
            const tableBody = document.getElementById('vocabTableBody');
            const data = vocabDatabase[lessonKey];

            if (!data || data.length === 0) {
                tableBody.innerHTML = '<tr class="no-data"><td colspan="2">No data available. Please wait for updates. (暫無資料，請等待更新)</td></tr>';
                return;
            }

            // Clear checked sections when loading new lesson
            checkedSections.clear();

            let html = '';
data.forEach((section, sectionIndex) => {
                html += `<tr>
                    <td colspan="2" class="section-header">${section.section}</td>
                </tr>`;
                
                section.words.forEach(item => {
                    const fullText = `${item.word}. ${item.example}`;
                    html += `<tr class="vocab-row">
                        <td class="audio-controls">
                            <button class="audio-btn play-btn" onclick="speakText('${fullText.replace(/'/g, "\\'")}')">🔊</button>
                            <button class="audio-btn stop-btn" onclick="stopSpeech()">⏹</button>
                        </td>
                        <td class="content-cell">
                            <div class="vocab-word">${item.word}</div>
                            <div class="example-sentence">${item.example}</div>
                        </td>
                    </tr>`;
                });
            });

tableBody.innerHTML = html;

            // Show section selector and populate it
            showSectionSelector(data, lessonKey);
        }

        // Flatten lesson data
        function flattenLessonData(lessonData) {
            const flattened = [];
            lessonData.forEach((section, sectionIndex) => {
                section.words.forEach((word, wordIndex) => {
                    flattened.push({
                        ...word,
                        sectionIndex,
                        sectionTitle: section.section,
                        wordIndex
                    });
                });
            });
            return flattened;
        }

// Show and populate section selector
        function showSectionSelector(lessonData, lessonKey) {
            const selectorArea = document.getElementById('sectionSelectorArea');
            const grid = document.getElementById('sectionCheckboxesGrid');
            
            grid.innerHTML = '';
            
            lessonData.forEach((section, sectionIndex) => {
                const itemDiv = document.createElement('div');
                itemDiv.className = 'section-checkbox-item';
                
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.id = `section_${lessonKey}_${sectionIndex}`;
                checkbox.checked = checkedSections.has(sectionIndex);
                checkbox.addEventListener('change', function() {
                    if (this.checked) {
                        checkedSections.add(sectionIndex);
                    } else {
                        checkedSections.delete(sectionIndex);
                    }
                });
                
                const label = document.createElement('label');
                label.htmlFor = checkbox.id;
                label.textContent = section.section;
                
                itemDiv.appendChild(checkbox);
                itemDiv.appendChild(label);
                grid.appendChild(itemDiv);
            });
            
            selectorArea.style.display = 'block';
        }

        // Get words from checked sections only
        function getWordsFromCheckedSections(lessonData) {
            const allWords = [];
            lessonData.forEach((section, sectionIndex) => {
                if (checkedSections.has(sectionIndex)) {
                    section.words.forEach((word, wordIndex) => {
                        allWords.push({
                            ...word,
                            sectionIndex,
                            sectionTitle: section.section,
                            wordIndex
                        });
                    });
                }
            });
            return allWords;
        }

        // ============ LISTEN AND CHOOSE QUIZ FUNCTIONS ============

        // Extract Chinese translation from word
        function extractChineseTranslation(wordString) {
            const match = wordString.match(/\(([^)]+)\):/);
            return match ? match[1] : wordString;
        }

        // Extract English word/phrase only
        function extractEnglishWord(wordString) {
            const match = wordString.match(/^(.+?)\s*\([^)]+\):/);
            return match ? match[1].trim() : wordString.split('(')[0].trim();
        }

        // Extract example sentence without Chinese translation
        function extractExampleOnly(exampleString) {
            return exampleString.split('(')[0].trim();
        }

// Start quiz
        function startListenChooseQuiz() {
            const selectedLesson = document.querySelector('.vocab-btn.active')?.getAttribute('data-lesson');
            
            if (!selectedLesson || !vocabDatabase[selectedLesson] || vocabDatabase[selectedLesson].length === 0) {
                alert('Please select a lesson with vocabulary data first! (請先選擇一個已匯入教材內容的單元)');
                return;
            }

            // Get words from checked sections only
            const lessonData = vocabDatabase[selectedLesson];
            const allWords = getWordsFromCheckedSections(lessonData);
            
            if (allWords.length < 8) {
                alert('Please select sections with at least 8 words for the quiz. (請勾選至少包含8個單字的區段)');
                return;
            }

            // Select 8 random words
            quizWords = shuffleArray([...allWords]).slice(0, 8);
            currentQuizIndex = 0;
            quizScore = 0;

            // Open modal and load first question
            document.getElementById('listenChooseModal').style.display = 'block';
            loadQuizQuestion();
        }

        // Shuffle array
        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        // Load quiz question
        function loadQuizQuestion() {
            if (currentQuizIndex >= quizWords.length) {
                showQuizComplete();
                return;
            }

            hasAnswered = false;
            correctAnswer = quizWords[currentQuizIndex];

            // Reset UI
            document.getElementById('listenAnswerDisplay').textContent = 'Click the speaker to hear';
            document.getElementById('timerFeedback').textContent = '';
            document.getElementById('timerFeedback').className = 'timer-feedback';
            document.getElementById('listenNextBtn').disabled = true;
            document.getElementById('listenNextBtn').style.display = 'inline-block';

            // Generate all 8 choices (include all quiz words)
            displayChoices(shuffleArray([...quizWords]));
        }

        // Display choices - show only Chinese translation
        function displayChoices(choices) {
            const grid = document.getElementById('choicesGrid');
            grid.innerHTML = '';

            choices.forEach((choice) => {
                const btn = document.createElement('button');
                btn.className = 'choice-btn';
                btn.textContent = extractChineseTranslation(choice.word);
                btn.onclick = () => handleChoiceClick(choice, btn);
                grid.appendChild(btn);
            });
        }

        // Handle choice click
        function handleChoiceClick(selectedChoice, btn) {
            if (hasAnswered) return;

            hasAnswered = true;
            const allChoices = document.querySelectorAll('.choice-btn');
            const correctChinese = extractChineseTranslation(correctAnswer.word);
            
            if (extractChineseTranslation(selectedChoice.word) === correctChinese) {
                // Correct answer
                btn.classList.add('correct');
                document.getElementById('timerFeedback').textContent = '✓ Correct!';
                document.getElementById('timerFeedback').className = 'timer-feedback correct';
                quizScore++;
            } else {
                // Wrong answer
                btn.classList.add('incorrect');
                document.getElementById('timerFeedback').textContent = '✗ Wrong! Correct: ' + correctChinese;
                document.getElementById('timerFeedback').className = 'timer-feedback incorrect';
                
                // Highlight correct answer
                allChoices.forEach(choiceBtn => {
                    if (choiceBtn.textContent === correctChinese) {
                        choiceBtn.classList.add('correct');
                    }
                });
            }

            // Disable all buttons
            allChoices.forEach(choiceBtn => {
                choiceBtn.disabled = true;
            });

            // Show English word/phrase and example (without Chinese)
            const englishWord = extractEnglishWord(correctAnswer.word);
            const exampleOnly = extractExampleOnly(correctAnswer.example);
            document.getElementById('listenAnswerDisplay').innerHTML = 
                `<strong>${englishWord}</strong><br><span style="font-size: 14px;">${exampleOnly}</span>`;

            // Enable next button
            document.getElementById('listenNextBtn').disabled = false;
        }

        // Play quiz audio - play English word and example only
        function playQuizAudio() {
            if (correctAnswer) {
                const englishWord = extractEnglishWord(correctAnswer.word);
                const exampleOnly = extractExampleOnly(correctAnswer.example);
                const fullText = `${englishWord}. ${exampleOnly}`;
                speakText(fullText);
            }
        }

        // Next quiz question
        function nextQuizQuestion() {
            currentQuizIndex++;
            loadQuizQuestion();
        }

        // Show quiz complete
        function showQuizComplete() {
            const grid = document.getElementById('choicesGrid');
            const percentage = Math.round((quizScore / quizWords.length) * 100);
            
            grid.innerHTML = `
                <div class="quiz-complete">
                    <h3>🎉 Quiz Complete!</h3>
                    <div class="quiz-score">
                        Your Score: ${quizScore} / ${quizWords.length} (${percentage}%)
                    </div>
                    <button class="restart-quiz-btn" onclick="restartQuiz()">Try Again</button>
                </div>
            `;

            document.getElementById('listenAnswerDisplay').textContent = 'Great job!';
            document.getElementById('timerFeedback').textContent = '';
            document.getElementById('listenNextBtn').style.display = 'none';
        }

        // Restart quiz
        function restartQuiz() {
            document.getElementById('listenNextBtn').style.display = 'inline-block';
            startListenChooseQuiz();
        }

        // Close quiz modal
        function closeQuizModal() {
            document.getElementById('listenChooseModal').style.display = 'none';
            stopSpeech();
        }

        // ============ STUDY SESSION FUNCTIONS ============

        function updateStudySession() {
            if (!currentLessonData || !flatWordsList.length) {
                document.getElementById('currentWord').textContent = 'Select a lesson first!';
                document.getElementById('currentExample').textContent = 'Please choose a lesson from the main page before starting your study session.';
                document.getElementById('progressInfo').textContent = 'Ready to start!';
                return;
            }

            if (isCompleted) {
                restoreNormalInterface();
            }

            const currentItem = flatWordsList[currentWordIndex];
            if (!currentItem) return;

            document.getElementById('currentWord').textContent = currentItem.word;
            document.getElementById('currentExample').textContent = currentItem.example;

            const totalWords = flatWordsList.length;
            const progressText = `Word ${currentWordIndex + 1} of ${totalWords} • ${currentItem.sectionTitle}`;
            document.getElementById('progressInfo').textContent = progressText;

            updateNavigationButtons();
        }

        function updateNavigationButtons() {
            const backBtn = document.getElementById('backBtn');
            const nextBtn = document.getElementById('nextBtn');
            const nextSectionBtn = document.getElementById('nextSectionBtn');

            if (!flatWordsList.length) return;

            const totalWords = flatWordsList.length;
            const currentItem = flatWordsList[currentWordIndex];

            backBtn.disabled = currentWordIndex === 0;
            nextBtn.disabled = currentWordIndex === totalWords - 1;

            const isLastSection = currentItem && currentItem.sectionIndex === Math.max(...flatWordsList.map(item => item.sectionIndex));
            nextSectionBtn.disabled = isLastSection;
        }

        function restoreNormalInterface() {
            const speechBubble = document.getElementById('speechBubble');
            const currentItem = flatWordsList[currentWordIndex];

            if (currentItem) {
                speechBubble.innerHTML = `<div class="current-word" id="currentWord">${currentItem.word}</div>
                    <div class="current-example" id="currentExample">${currentItem.example}</div>
                    <div class="bubble-controls">
                        <button class="bubble-btn play-btn" id="speakCurrentBtn">🔊</button>
                        <button class="bubble-btn stop-btn" id="stopCurrentBtn">⏹</button>
                    </div>`;

                attachBubbleEventListeners();
            }

            isCompleted = false;
        }

        function attachBubbleEventListeners() {
            const speakBtn = document.getElementById('speakCurrentBtn');
            const stopBtn = document.getElementById('stopCurrentBtn');

            if (speakBtn) {
                speakBtn.addEventListener('click', handleSpeakCurrent);
            }
            if (stopBtn) {
                stopBtn.addEventListener('click', stopSpeech);
            }
        }

        function handleSpeakCurrent() {
            const currentItem = flatWordsList[currentWordIndex];
            if (currentItem) {
                const fullText = `${currentItem.word}. ${currentItem.example}`;
                speakText(fullText);
            }
        }

        function showCongratulations() {
            const partnerName = partners[currentPartner].name;
            const message = `Fantastic work! You've completed the entire vocabulary list! ${partnerName} is so proud of you!`;

            const speechBubble = document.getElementById('speechBubble');
            speechBubble.innerHTML = `<div class="congratulations">
                    <h3>Congratulations!</h3>
                    <p>${message}</p>
                </div>
                <div class="bubble-controls">
                    <button class="bubble-btn play-btn" id="congratsPlayBtn">🔊</button>
                    <button class="bubble-btn stop-btn" id="congratsStopBtn">⏹</button>
                    <button class="bubble-btn learn-again-btn" id="learnAgainBtn">🔄 Learn Again</button>
                </div>`;

            document.getElementById('congratsPlayBtn').addEventListener('click', () => speakText(message));
            document.getElementById('congratsStopBtn').addEventListener('click', stopSpeech);
            document.getElementById('learnAgainBtn').addEventListener('click', restartLesson);

            setTimeout(() => speakText(message), 500);

            document.getElementById('progressInfo').textContent = 'Lesson Complete!';
            isCompleted = true;
            updateNavigationButtons();
        }

        function checkCompletion() {
            if (currentWordIndex >= flatWordsList.length && !isCompleted) {
                showCongratulations();
                currentWordIndex = flatWordsList.length - 1;
            }
        }

        function nextWord() {
            if (currentWordIndex < flatWordsList.length - 1) {
                currentWordIndex++;
                updateStudySession();
            } else if (currentWordIndex === flatWordsList.length - 1) {
                currentWordIndex++;
                checkCompletion();
            }
        }

        function previousWord() {
            if (currentWordIndex > 0) {
                currentWordIndex--;
                if (isCompleted) {
                    isCompleted = false;
                }
                updateStudySession();
            }
        }

        function nextSection() {
            const currentSectionIndex = flatWordsList[currentWordIndex].sectionIndex;
            const nextSectionFirstWord = flatWordsList.find(item => item.sectionIndex > currentSectionIndex);
            
            if (nextSectionFirstWord) {
                currentWordIndex = flatWordsList.indexOf(nextSectionFirstWord);
                updateStudySession();
                checkCompletion();
            }
        }

        function restartLesson() {
            currentWordIndex = 0;
            isCompleted = false;
            updateStudySession();
        }

        function startStudySession(partnerNumber) {
            const selectedLesson = document.querySelector('.vocab-btn.active')?.getAttribute('data-lesson');
            
            if (!selectedLesson || !vocabDatabase[selectedLesson] || vocabDatabase[selectedLesson].length === 0) {
                alert('Please select a lesson with vocabulary data first! (請先選擇一個已匯入教材內容的單元)');
                return;
            }

            currentPartner = partnerNumber;
            currentLessonData = vocabDatabase[selectedLesson];
            flatWordsList = flattenLessonData(currentLessonData);
            currentWordIndex = 0;
            isCompleted = false;

            const partnerInfo = partners[partnerNumber];
            const avatarElement = document.getElementById('currentPartnerAvatar');
            avatarElement.innerHTML = `<img src="${partnerInfo.image}" alt="partner ${partnerNumber}">`;

            document.getElementById('partnerModal').style.display = 'none';
            document.getElementById('studyModal').style.display = 'block';

            updateStudySession();
        }

        // ============ INITIALIZE EVENT LISTENERS ============

        function initializeEventListeners() {
            document.body.addEventListener('click', () => loadVoices(), { once: true });

            // Lesson buttons
            const lessonButtons = document.querySelectorAll('.vocab-btn');
            lessonButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    lessonButtons.forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    const lessonKey = this.getAttribute('data-lesson');
                    loadVocabulary(lessonKey);
                });
            });

            // Speed buttons
            const speedButtons = document.querySelectorAll('.speed-btn');
            speedButtons.forEach(btn => {
                btn.addEventListener('click', function() {
                    speedButtons.forEach(b => b.classList.remove('active-speed'));
                    this.classList.add('active-speed');
                    speechRate = parseFloat(this.getAttribute('data-speed'));
                    stopSpeech();
                });
            });

            // Listen and Choose Quiz button
            document.getElementById('listenChooseBtn').addEventListener('click', startListenChooseQuiz);
            document.getElementById('listenSpeaker').addEventListener('click', playQuizAudio);
            document.getElementById('listenNextBtn').addEventListener('click', nextQuizQuestion);
            document.getElementById('listenCloseBtn').addEventListener('click', closeQuizModal);
            document.getElementById('closeListenChoose').addEventListener('click', closeQuizModal);

            // Partner modal
            const choosePartnerBtn = document.getElementById('choosePartnerBtn');
            const partnerModal = document.getElementById('partnerModal');
            const studyModal = document.getElementById('studyModal');

            choosePartnerBtn.addEventListener('click', () => {
                partnerModal.style.display = 'block';
            });

            document.getElementById('closePartnerModal').addEventListener('click', () => {
                partnerModal.style.display = 'none';
            });

            document.getElementById('closeStudyModal').addEventListener('click', () => {
                studyModal.style.display = 'none';
                stopSpeech();
            });

            const selectPartnerBtns = document.querySelectorAll('.select-partner-btn');
            selectPartnerBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    const partnerNumber = parseInt(this.getAttribute('data-partner'));
                    startStudySession(partnerNumber);
                });
            });

            // Navigation buttons
            document.getElementById('nextBtn').addEventListener('click', nextWord);
            document.getElementById('backBtn').addEventListener('click', previousWord);
            document.getElementById('nextSectionBtn').addEventListener('click', nextSection);

            attachBubbleEventListeners();

            // Welcome modal
            document.getElementById('welcomeOkBtn').addEventListener('click', () => {
                document.getElementById('welcomeModal').style.display = 'none';
            });

            // Click outside modal to close
            window.addEventListener('click', (e) => {
                if (e.target === partnerModal) {
                    partnerModal.style.display = 'none';
                }
                if (e.target === studyModal) {
                    studyModal.style.display = 'none';
                    stopSpeech();
                }
                if (e.target === document.getElementById('listenChooseModal')) {
                    closeQuizModal();
                }
            });

            window.addEventListener('beforeunload', () => stopSpeech());
        }

        document.addEventListener('DOMContentLoaded', initializeEventListeners);
    </script>
</body>
</html>
