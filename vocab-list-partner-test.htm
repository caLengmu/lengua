<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vocabulary List</title>
  <style>
    
 * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            border-radius: 8px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        h1 {
            text-align: center;
            margin-bottom: 30px;
            color: #2c3e50;
            font-size: 2.5em;
        }
        
        .button-categories {
            margin-bottom: 30px;
        }
        
        .category {
            margin-bottom: 25px;
        }
        
        .category-title {
            font-size: 1.5em;
            font-weight: bold;
            margin-bottom: 10px;
            color: #34495e;
            border-bottom: 2px solid #3498db;
            padding-bottom: 5px;
            display: inline-block;
        }
        
        .category-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        
        .vocab-btn {
            background-color: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        
        .vocab-btn:hover {
            background-color: #2980b9;
        }
        
        .vocab-btn.active {
            background-color: #e74c3c;
        }
        
        .speed-control-section {
            margin: 30px 0;
            text-align: center;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 5px;
            border: 1px solid #e9ecef;
        }
        
        .speed-label {
            font-weight: bold;
            color: #495057;
            margin-right: 15px;
            font-size: 16px;
        }
        
        .speed-btn {
            background-color: #6c757d;
            color: white;
            border: none;
            padding: 8px 16px;
            margin: 0 5px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        
        .speed-btn:hover {
            background-color: #5a6268;
        }
        
        .speed-btn.active-speed {
            background-color: #28a745;
        }

        .study-partner-section {
            margin: 30px 0;
            text-align: center;
            padding: 20px;
            background-color: #e8f4f8;
            border-radius: 8px;
        }

        .study-partner-btn {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
        }

        .study-partner-btn:hover {
            background-color: #218838;
        }

        .vocab-table-container {
            margin-top: 30px;
            overflow-x: auto;
        }
        
        .vocab-table {
            width: 100%;
            border-collapse: collapse;
            background-color: white;
        }
        
        .section-header {
            background-color: #ecf0f1;
            font-weight: bold;
            padding: 15px;
            text-align: left;
            font-size: 1.5em;
            color: #2c3e50;
        }
        
        .vocab-row {
            border-bottom: 1px solid #ddd;
        }
        
        .audio-controls {
            width: 80px;
            text-align: center;
            padding: 15px 10px;
            vertical-align: top;
        }
        
        .content-cell {
            padding: 15px;
            vertical-align: top;
        }
        
        .vocab-word {
            font-weight: bold;
            font-size: 1.5em;
            color: #2c3e50;
            margin-bottom: 8px;
        }
        
        .example-sentence {
            font-size: 1.5em;
            color: #555;
            line-height: 1.5;
        }
        
        .audio-btn {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 20px;
            margin: 2px;
            padding: 5px;
            border-radius: 3px;
            transition: background-color 0.3s;
        }
        
        .audio-btn:hover {
            background-color: #f0f0f0;
        }
        
        .play-btn {
            color: #27ae60;
        }
        
        .stop-btn {
            color: #e74c3c;
        }
        
        .no-data {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
            font-style: italic;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: white;
            margin: 50px auto;
            padding: 30px;
            border-radius: 5px;
            width: 90%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
            position: relative;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }

        .close:hover {
            color: #000;
        }

        .partner-selection {
            text-align: center;
        }

        .partner-selection h2 {
            color: #2c3e50;
            margin-bottom: 30px;
        }

        .partners-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .partner-card {
            background-color: #f8f9fa;
            border: 2px solid #dee2e6;
            border-radius: 5px;
            padding: 20px;
            text-align: center;
        }

        .partner-image {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background-color: #e9ecef;
            overflow: hidden;
            margin: 0 auto 15px;
        }

        .partner-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .select-partner-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 14px;
        }

        .select-partner-btn:hover {
            background-color: #0056b3;
        }

        /* Study Session Styles */
        .study-session {
            text-align: center;
        }

        .partner-display {
            margin-bottom: 30px;
        }

        .partner-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background-color: #e9ecef;
            overflow: hidden;
            margin: 0 auto 20px;
        }

        .partner-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .speech-bubble {
            background-color: #f8f9fa;
            border: 2px solid #dee2e6;
            padding: 20px;
            border-radius: 10px;
            margin: 0 auto 20px;
            max-width: 500px;
        }

        .current-word {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .current-example {
            font-size: 20px;
            margin-bottom: 15px;
        }

        .bubble-controls {
            margin-bottom: 15px;
        }

        .bubble-btn {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 20px;
            margin: 0 5px;
            padding: 5px;
            border-radius: 3px;
            transition: background-color 0.3s;
        }

        .bubble-btn:hover {
            background-color: #f0f0f0;
        }

        .bubble-btn.play-btn {
            color: #27ae60;
        }

        .bubble-btn.stop-btn {
            color: #e74c3c;
        }

        .progress-info {
            margin-bottom: 20px;
            font-size: 14px;
            color: #666;
        }

        .navigation-controls {
            display: flex;
            justify-content: center;
            gap: 10px;
            flex-wrap: wrap;
        }

        .nav-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 3px;
            cursor: pointer;
            font-size: 14px;
        }

        .nav-btn:hover {
            background-color: #0056b3;
        }

        .nav-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .learn-again-btn {
            background-color: #28a745;
        }

        .learn-again-btn:hover {
            background-color: #218838;
        }

        .congratulations {
            background-color: #d1ecf1;
            border: 1px solid #bee5eb;
            color: #0c5460;
            padding: 20px;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .congratulations h3 {
            margin-bottom: 10px;
        }
        
        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }
            
            h1 {
                font-size: 2em;
            }
            
            .category-buttons {
                justify-content: center;
            }
            
            .vocab-btn {
                padding: 10px 15px;
                font-size: 13px;
            }
            
            .audio-controls {
                width: 60px;
                padding: 10px 5px;
            }
            
            .content-cell {
                padding: 12px;
            }
            
            .vocab-word {
                font-size: 1.3em;
            }
            
            .speed-control-section {
                margin: 20px 0;
                padding: 10px;
            }
            
            .speed-label {
                display: block;
                margin-bottom: 10px;
                margin-right: 0;
            }
            
            .speed-btn {
                padding: 10px 14px;
                margin: 2px;
                font-size: 13px;
            }

            .partners-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .partner-image {
                width: 60px;
                height: 60px;
            }

            .partner-avatar {
                width: 80px;
                height: 80px;
            }

            .navigation-controls {
                gap: 5px;
            }

            .nav-btn {
                padding: 8px 12px;
                font-size: 12px;
            }

            .modal-content {
                margin: 20px auto;
                padding: 20px;
            }

            .speech-bubble {
                padding: 15px;
            }

            .current-word {
                font-size: 20px;
            }

            .current-example {
                font-size: 20px;
            }
        }

  </style>
</head>
<body>
  <div class="container">
    <h1>Vocabulary List (2.2)</h1>

    <div class="button-categories">
      <div class="category">
        <div class="category-title">Textbook</div>
        <div class="category-buttons">
          <button class="vocab-btn" data-category="textbook" data-lesson="B3_L1">B3 L1</button>
          <button class="vocab-btn" data-category="textbook" data-lesson="B3_L2">B3 L2</button>
          <button class="vocab-btn" data-category="textbook" data-lesson="B3_L3">B3 L3</button>
        </div>
      </div>
      
      <div class="category">
        <div class="category-title">Magazine</div>
        <div class="category-buttons">
          <button class="vocab-btn" data-category="magazine" data-lesson="U4">U4</button>
          <button class="vocab-btn" data-category="magazine" data-lesson="U9">U9</button>
          <button class="vocab-btn" data-category="magazine" data-lesson="U11">U11</button>
          <button class="vocab-btn" data-category="magazine" data-lesson="U13">U13</button>
        </div>
      </div>
      
      <div class="category">
        <div class="category-title">核心字彙</div>
        <div class="category-buttons">
          <button class="vocab-btn" data-category="core" data-lesson="P2U1">P2 U1</button>
          <button class="vocab-btn" data-category="core" data-lesson="P2U2">P2 U2</button>
          <button class="vocab-btn" data-category="core" data-lesson="P2U3">P2 U3</button>
        </div>
      </div>
    </div>

    <!-- Speed Control -->
    <div class="speed-control-section">
      <span class="speed-label">Speed:</span>
      <button class="speed-btn" data-speed="1.2">1.2x</button>
      <button class="speed-btn active-speed" data-speed="1.0">1x</button>
      <button class="speed-btn" data-speed="0.8">0.8x</button>
      <button class="speed-btn" data-speed="0.6">0.6x</button>
    </div>

    <!-- Study Partner Section -->
    <div class="study-partner-section">
      <button class="study-partner-btn" id="choosePartnerBtn">
        Choose Your Study Partner
      </button>
    </div>

    <!-- Table -->
    <div class="vocab-table-container">
      <table class="vocab-table" id="vocabTable">
        <tbody id="vocabTableBody">
          <tr class="no-data">
            <td colspan="2">Select a lesson to display vocabulary</td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Partner Selection Modal -->
  <div id="partnerModal" class="modal">
    <div class="modal-content">
      <span class="close" id="closePartnerModal">&times;</span>
      <div class="partner-selection">
        <h2>Choose Your Study Partner</h2>
        <div class="partners-grid">
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner1.png" alt="partner 1">
            </div>
            <button class="select-partner-btn" data-partner="1">Partner 1</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner2.png" alt="partner 2">
            </div>
            <button class="select-partner-btn" data-partner="2">Partner 2</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner3.png" alt="partner 3">
            </div>
            <button class="select-partner-btn" data-partner="3">Partner 3</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner4.png" alt="partner 4">
            </div>
            <button class="select-partner-btn" data-partner="4">Partner 4</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner5.png" alt="partner 5">
            </div>
            <button class="select-partner-btn" data-partner="5">Partner 5</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner6.png" alt="partner 6">
            </div>
            <button class="select-partner-btn" data-partner="6">Partner 6</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner7.png" alt="partner 7">
            </div>
            <button class="select-partner-btn" data-partner="7">Partner 7</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner8.png" alt="partner 8">
            </div>
            <button class="select-partner-btn" data-partner="8">Partner 8</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner9.png" alt="partner 9">
            </div>
            <button class="select-partner-btn" data-partner="9">Partner 9</button>
          </div>
          <div class="partner-card">
            <div class="partner-image">
              <img src="partner10.png" alt="partner 10">
            </div>
            <button class="select-partner-btn" data-partner="10">Partner 10</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Study Session Modal -->
  <div id="studyModal" class="modal">
    <div class="modal-content">
      <span class="close" id="closeStudyModal">&times;</span>
      <div class="study-session">
        <div class="partner-display">
          <div class="partner-avatar" id="currentPartnerAvatar">
            <img src="partner1.png" alt="partner 1">
          </div>
          <div class="speech-bubble">
            <div class="current-word" id="currentWord">Select a lesson first!</div>
            <div class="current-example" id="currentExample">Please choose a lesson from the main page before starting your study session.</div>
            <div class="bubble-controls">
              <button class="bubble-btn play-btn" id="speakCurrentBtn">🔊</button>
              <button class="bubble-btn stop-btn" id="stopCurrentBtn">⏹</button>
            </div>
          </div>
        </div>
        
        <div class="progress-info" id="progressInfo">
          Ready to start!
        </div>
        
        <div class="navigation-controls">
          <button class="nav-btn" id="backBtn">← Back</button>
          <button class="nav-btn" id="nextBtn">Next →</button>
          <button class="nav-btn" id="nextSectionBtn">Next Section</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Built-in database
    const vocabDatabase = {
      B3_L2: [],
      'B3_L1': [],
      'B3_L3': [],
      'U4': [],
      'U9': [],
      'U11': [],
      'U13': [],
      'P2U1': [
        {
          "section": "◎Vocabulary List",
          "words": [
            {
              "word": "dependent (adj) (依賴的)",
              "example": "He is dependent on his parents for money. (他依賴父母給他錢。)"
            },
            {
              "word": "imagine (v) (想像)",
              "example": "I can imagine living on the moon one day. (我能想像有一天住在月球上。)"
            },
            {
              "word": "electronics (n) (電子產品)",
              "example": "My brother loves electronics like phones and tablets. (我哥哥喜歡電子產品，像是手機和平板。)"
            },
            {
              "word": "advanced (adj) (先進的)",
              "example": "This is an advanced phone with a lot of features. (這是一支功能很多的先進手機。)"
            },
            {
              "word": "commercial (adj) (商業的)",
              "example": "They are a commercial company that sells clothes. (他們是一家賣衣服的商業公司。)"
            },
            {
              "word": "TV commercial (n) (電視廣告)",
              "example": "I saw a TV commercial for a new video game. (我看了一個新電玩遊戲的電視廣告。)"
            },
            {
              "word": "technically (adv) (技術上地)",
              "example": "Technically, a robot is a machine that does work. (技術上來說，機器人是做事的機器。)"
            },
            {
              "word": "assistant (n) (助理)",
              "example": "My boss has a new assistant to help with work. (我的老闆有一個新助理來幫忙工作。)"
            },
            {
              "word": "device (n) (裝置)",
              "example": "A smartphone is a useful communication device. (智慧型手機是個有用的通訊裝置。)"
            },
            {
              "word": "imitate (v) (模仿)",
              "example": "A parrot can imitate human sounds. (鸚鵡可以模仿人類的聲音。)"
            }
          ]
        }
      ],
      'P2U2': [],
      'P2U3': []
    };

    // Partner configurations
    const partners = {
      1: { image: 'partner1.png', name: 'Kitty' },
      2: { image: 'partner2.png', name: 'Buddy' },
      3: { image: 'partner3.png', name: 'Panda' },
      4: { image: 'partner4.png', name: 'Foxy' },
      5: { image: 'partner5.png', name: 'Froggy' },
      6: { image: 'partner6.png', name: 'Sparkle' },
      7: { image: 'partner7.png', name: 'Lucky' },
      8: { image: 'partner8.png', name: 'Shadow' },
      9: { image: 'partner9.png', name: 'Rainbow' }
    };

    // Study session state
    let currentLessonData = null;
    let currentPartner = null;
    let currentWordIndex = 0;
    let flatWordsList = [];
    let currentSpeech = null;
    let speechRate = 1.0;
    let voices = [];

    // Load voices
    function loadVoices() {
      voices = speechSynthesis.getVoices();
      if (!voices.length) {
        const dummy = new SpeechSynthesisUtterance('');
        speechSynthesis.speak(dummy);
        voices = speechSynthesis.getVoices();
      }
    }

    // Get English voice
    function getEnglishVoice() {
      if (!voices.length) loadVoices();
      let voice = voices.find(v => v.name.includes('Samantha')) || voices.find(v => v.lang === 'en-US');
      return voice || null;
    }

    // Clean text for TTS
    function cleanTextForTTS(text) {
      return text.replace(/\*/g, '')
                 .replace(/\//g, '')
                 .replace(/\([^)]*\)/g, '')
                 .replace(/\[[^\]]*\]/g, '')
                 .replace(/\s+/g, ' ')
                 .trim();
    }

    // Speak text
    function speakText(text) {
      stopSpeech();
      const cleaned = cleanTextForTTS(text);
      if (!cleaned) return;

      const utterance = new SpeechSynthesisUtterance(cleaned);
      utterance.lang = 'en-US';
      utterance.rate = speechRate;

      const voice = getEnglishVoice();
      if (voice) utterance.voice = voice;

      utterance.onend = () => { currentSpeech = null; };
      currentSpeech = utterance;
      speechSynthesis.speak(utterance);
    }

    // Stop speech
    function stopSpeech() {
      if (speechSynthesis.speaking || speechSynthesis.pending) {
        speechSynthesis.cancel();
      }
      currentSpeech = null;
    }

    // Load vocabulary
    function loadVocabulary(lessonKey) {
      const tableBody = document.getElementById('vocabTableBody');
      const data = vocabDatabase[lessonKey];

      if (!data || data.length === 0) {
        tableBody.innerHTML = '<tr class="no-data"><td colspan="2">No data available</td></tr>';
        return;
      }

      let html = '';
      data.forEach(section => {
        html += `<tr><td colspan="2" class="section-header">${section.section}</td></tr>`;
        section.words.forEach(item => {
          const fullText = `${item.word}. ${item.example}`;
          html += `
            <tr class="vocab-row">
              <td class="audio-controls">
                <button class="audio-btn play-btn" onclick="speakText('${fullText.replace(/'/g, "\\'")}')">🔊</button>
                <button class="audio-btn stop-btn" onclick="stopSpeech()">⏹</button>
              </td>
              <td class="content-cell">
                <div class="vocab-word">${item.word}</div>
                <div class="example-sentence">${item.example}</div>
              </td>
            </tr>
          `;
        });
      });
      tableBody.innerHTML = html;
    }

    // Flatten lesson data
    function flattenLessonData(lessonData) {
      const flattened = [];
      lessonData.forEach((section, sectionIndex) => {
        section.words.forEach((word, wordIndex) => {
          flattened.push({
            ...word,
            sectionIndex,
            sectionTitle: section.section,
            wordIndex
          });
        });
      });
      return flattened;
    }

    // Update study session
    function updateStudySession() {
      if (!currentLessonData || !flatWordsList.length) {
        document.getElementById('currentWord').textContent = 'Select a lesson first!';
        document.getElementById('currentExample').textContent = 'Please choose a lesson from the main page before starting your study session.';
        document.getElementById('progressInfo').textContent = 'Ready to start!';
        return;
      }

      const currentItem = flatWordsList[currentWordIndex];
      if (!currentItem) return;

      document.getElementById('currentWord').textContent = currentItem.word;
      document.getElementById('currentExample').textContent = currentItem.example;
      
      const totalWords = flatWordsList.length;
      const progressText = `Word ${currentWordIndex + 1} of ${totalWords} • ${currentItem.sectionTitle}`;
      document.getElementById('progressInfo').textContent = progressText;

      // Update navigation buttons
      document.getElementById('backBtn').disabled = currentWordIndex === 0;
      document.getElementById('nextBtn').disabled = currentWordIndex === totalWords - 1;
      
      const currentSectionWords = flatWordsList.filter(item => item.sectionIndex === currentItem.sectionIndex);
      const isLastWordInSection = currentSectionWords[currentSectionWords.length - 1] === currentItem;
      const isLastSection = currentItem.sectionIndex === Math.max(...flatWordsList.map(item => item.sectionIndex));
      document.getElementById('nextSectionBtn').disabled = isLastSection;
    }

    // Check completion
    function checkCompletion() {
      if (currentWordIndex === flatWordsList.length - 1) {
        showCongratulations();
      }
    }

    // Show congratulations
    function showCongratulations() {
      const partnerName = partners[currentPartner].name;
      const message = `Fantastic work! You've completed the entire vocabulary list! ${partnerName} is so proud of you!`;
      
      const speechBubble = document.querySelector('.speech-bubble');
      speechBubble.innerHTML = `
        <div class="congratulations">
          <h3>Congratulations!</h3>
          <p>${message}</p>
        </div>
        <div class="bubble-controls">
          <button class="bubble-btn play-btn" onclick="speakText('${message}')">🔊</button>
          <button class="bubble-btn stop-btn" onclick="stopSpeech()">⏹</button>
          <button class="bubble-btn learn-again-btn" onclick="restartLesson()">🔄 Learn Again</button>
        </div>
      `;
      
      setTimeout(() => speakText(message), 500);
      
      document.getElementById('progressInfo').textContent = 'Lesson Complete!';
      document.getElementById('nextBtn').disabled = true;
      document.getElementById('nextSectionBtn').disabled = true;
      document.getElementById('backBtn').disabled = false; // Enable back button to go to previous word
    }

    // Navigation functions
    function nextWord() {
      if (currentWordIndex < flatWordsList.length - 1) {
        currentWordIndex++;
        updateStudySession();
        checkCompletion();
      }
    }

    function previousWord() {
      if (currentWordIndex > 0) {
        currentWordIndex--;
        updateStudySession();
      }
    }

    function nextSection() {
      const currentSectionIndex = flatWordsList[currentWordIndex].sectionIndex;
      const nextSectionFirstWord = flatWordsList.find(item => item.sectionIndex > currentSectionIndex);
      
      if (nextSectionFirstWord) {
        currentWordIndex = flatWordsList.indexOf(nextSectionFirstWord);
        updateStudySession();
        checkCompletion();
      }
    }

    // Restart lesson from beginning
    function restartLesson() {
      currentWordIndex = 0;
      updateStudySession();
    }
    function startStudySession(partnerNumber) {
      const selectedLesson = document.querySelector('.vocab-btn.active')?.getAttribute('data-lesson');
      
      if (!selectedLesson || !vocabDatabase[selectedLesson] || vocabDatabase[selectedLesson].length === 0) {
        alert('Please select a lesson with vocabulary data first!');
        return;
      }

      currentPartner = partnerNumber;
      currentLessonData = vocabDatabase[selectedLesson];
      flatWordsList = flattenLessonData(currentLessonData);
      currentWordIndex = 0;

      // Update partner display
      const partnerInfo = partners[partnerNumber];
      const avatarElement = document.getElementById('currentPartnerAvatar');
      avatarElement.innerHTML = `<img src="${partnerInfo.image}" alt="partner ${partnerNumber}">`;
      
      // Close partner selection modal and open study session
      document.getElementById('partnerModal').style.display = 'none';
      document.getElementById('studyModal').style.display = 'block';
      
      updateStudySession();
    }

    // Event listeners
    document.addEventListener('DOMContentLoaded', () => {
      // Load voices
      document.body.addEventListener('click', () => loadVoices(), { once: true });

      // Lesson buttons
      const lessonButtons = document.querySelectorAll('.vocab-btn');
      lessonButtons.forEach(btn => {
        btn.addEventListener('click', function() {
          lessonButtons.forEach(b => b.classList.remove('active'));
          this.classList.add('active');
          const lessonKey = this.getAttribute('data-lesson');
          loadVocabulary(lessonKey);
        });
      });

      // Speed buttons
      const speedButtons = document.querySelectorAll('.speed-btn');
      speedButtons.forEach(btn => {
        btn.addEventListener('click', function() {
          speedButtons.forEach(b => b.classList.remove('active-speed'));
          this.classList.add('active-speed');
          speechRate = parseFloat(this.getAttribute('data-speed'));
          stopSpeech();
        });
      });

      // Modal controls
      const choosePartnerBtn = document.getElementById('choosePartnerBtn');
      const partnerModal = document.getElementById('partnerModal');
      const studyModal = document.getElementById('studyModal');
      
      choosePartnerBtn.addEventListener('click', () => {
        partnerModal.style.display = 'block';
      });

      // Close buttons
      document.getElementById('closePartnerModal').addEventListener('click', () => {
        partnerModal.style.display = 'none';
      });

      document.getElementById('closeStudyModal').addEventListener('click', () => {
        studyModal.style.display = 'none';
        stopSpeech();
      });

      // Partner selection buttons
      const selectPartnerBtns = document.querySelectorAll('.select-partner-btn');
      selectPartnerBtns.forEach(btn => {
        btn.addEventListener('click', function() {
          const partnerNumber = parseInt(this.getAttribute('data-partner'));
          startStudySession(partnerNumber);
        });
      });

      // Study session controls
      document.getElementById('speakCurrentBtn').addEventListener('click', () => {
        const currentItem = flatWordsList[currentWordIndex];
        if (currentItem) {
          const fullText = `${currentItem.word}. ${currentItem.example}`;
          speakText(fullText);
        }
      });

      document.getElementById('stopCurrentBtn').addEventListener('click', stopSpeech);
      document.getElementById('nextBtn').addEventListener('click', nextWord);
      document.getElementById('backBtn').addEventListener('click', previousWord);
      document.getElementById('nextSectionBtn').addEventListener('click', nextSection);

      // Click outside modal to close
      window.addEventListener('click', (e) => {
        if (e.target === partnerModal) {
          partnerModal.style.display = 'none';
        }
        if (e.target === studyModal) {
          studyModal.style.display = 'none';
          stopSpeech();
        }
      });
    });

    window.addEventListener('beforeunload', () => stopSpeech());
  </script>
</body>
</html>