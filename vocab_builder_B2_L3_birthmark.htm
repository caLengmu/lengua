<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vocabulary Quiz</title>
    <style>
        :root {
            --color-bg: #f4f1de;
            --color-text: #2d334a;
            --color-primary: #e07a5f;
            --color-secondary: #81b29a;
            --color-accent: #f2cc8f;
            --color-button1: #3d405b;
            --color-button2: #e07a5f;
            --color-button3: #81b29a;
            --color-button4: #f2cc8f;
            --color-button5: #d62828;
        }

        body {
            font-family: 'Helvetica Neue', Arial, sans-serif;
            background-color: var(--color-bg);
            color: var(--color-text);
            margin: 0;
            padding: 20px;
            line-height: 1.6;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: var(--color-primary);
            margin-bottom: 20px;
        }

        button {
            cursor: pointer;
            border: none;
            border-radius: 4px;
            padding: 8px 16px;
            font-weight: bold;
            transition: background-color 0.2s;
        }

        button:hover {
            opacity: 0.9;
        }

        #startLearningBtn {
            background-color: var(--color-primary);
            color: white;
            padding: 12px 24px;
            font-size: 18px;
            display: block;
            margin: 0 auto 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: var(--color-accent);
            color: var(--color-text);
        }

        .speaker-icon {
            cursor: pointer;
            margin-left: 10px;
            color: var(--color-primary);
        }

        #quizModal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .quiz-content {
            background-color: white;
            padding: 30px;
            border-radius: 8px;
            max-width: 500px;
            width: 90%;
            text-align: center;
            position: relative;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }

        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 24px;
            cursor: pointer;
            color: var(--color-text);
        }

        #promptText {
            font-size: 22px;
            margin-bottom: 20px;
            color: var(--color-text);
        }

        #answerInput {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 2px solid var(--color-accent);
            border-radius: 4px;
            font-size: 16px;
        }

        .quiz-buttons {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            justify-content: center;
            margin-top: 20px;
        }

        #submitBtn {
            background-color: var(--color-button1);
            color: white;
        }

        #speakBtn {
            background-color: var(--color-button2);
            color: white;
        }

        #hintBtn {
            background-color: var(--color-button3);
            color: white;
        }

        #nextBtn {
            background-color: var(--color-button4);
            color: var(--color-text);
        }

        #closeBtn {
            background-color: var(--color-button5);
            color: white;
        }

        #feedback {
            margin-top: 15px;
            font-weight: bold;
            min-height: 24px;
        }

        #hint {
            margin-top: 10px;
            font-style: italic;
            min-height: 24px;
        }

        .section-title {
            margin-top: 30px;
            font-size: 18px;
            color: var(--color-primary);
            border-bottom: 2px solid var(--color-accent);
            padding-bottom: 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>B2 L3 The Birthmark</h1>
        <button id="startLearningBtn">Start Learning!</button>

        <div class="section-title">First Half (前半部)</div>
        <table id="vocabTable">
            <thead>
                <tr>
                    <th>Vocabulary</th>
                    <th>Chinese Translation</th>
                    <th>
                        <div style="display: flex; align-items: center;">
                            <span>Select</span>
                            <input type="checkbox" id="selectAll" style="margin-left: 10px;">
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody id="vocabBody">
                <!-- Table content will be dynamically added here -->
            </tbody>
        </table>

        <div class="section-title">Second Half (後半部)</div>
        <table id="vocabTable2">
            <thead>
                <tr>
                    <th>Vocabulary</th>
                    <th>Chinese Translation</th>
                    <th>
                        <div style="display: flex; align-items: center;">
                            <span>Select</span>
                            <input type="checkbox" id="selectAll2" style="margin-left: 10px;">
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody id="vocabBody2">
                <!-- Table content will be dynamically added here -->
            </tbody>
        </table>

        <div class="section-title">Phrases & Idioms (片語)</div>
        <table id="vocabTable3">
            <thead>
                <tr>
                    <th>Vocabulary</th>
                    <th>Chinese Translation</th>
                    <th>
                        <div style="display: flex; align-items: center;">
                            <span>Select</span>
                            <input type="checkbox" id="selectAll3" style="margin-left: 10px;">
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody id="vocabBody3">
                <!-- Table content will be dynamically added here -->
            </tbody>
        </table>

        <div class="section-title">More on parts of speech (詞類變化補充)</div>
        <table id="vocabTable4">
            <thead>
                <tr>
                    <th>Vocabulary</th>
                    <th>Chinese Translation</th>
                    <th>
                        <div style="display: flex; align-items: center;">
                            <span>Select</span>
                            <input type="checkbox" id="selectAll4" style="margin-left: 10px;">
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody id="vocabBody4">
                <!-- Table content will be dynamically added here -->
            </tbody>
        </table>
    </div>

    <div id="quizModal">
        <div class="quiz-content">
            <span class="close-btn" id="modalCloseBtn">&times;</span>
            <div id="promptText"></div>
            <input type="text" id="answerInput" placeholder="Type your answer...">
            <div id="feedback"></div>
            <div id="hint"></div>
            <div class="quiz-buttons">
                <button id="submitBtn">Submit</button>
                <button id="speakBtn">Speak</button>
                <button id="hintBtn">Hint</button>
                <button id="nextBtn">Next</button>
                <button id="closeBtn">Close</button>
            </div>
        </div>
    </div>

    <script>
        // Vocabulary data
        const vocabularyData = [
            // First half
            { word: "graceful (adj)", translation: "優雅的", section: 1 },
            { word: "desperate (adj)", translation: "非常想要的", section: 1 },
            { word: "desperate (adj)", translation: "(因絕望而)拼命的、不顧一切的", section: 1 },
            { word: "reluctant (adj)", translation: "不情願的", section: 1 },
            { word: "describe (v)", translation: "描述、形容(v)", section: 1 },
            { word: "shiver (v)", translation: "顫抖", section: 1 },
            { word: "faint (v)", translation: "暈倒", section: 1 },
            { word: "scientific (adj)", translation: "科學的", section: 1 },
            { word: "frustrate (v)", translation: "使沮喪", section: 1 },
            { word: "stubborn (adj)", translation: "固執的", section: 1 },
            { word: "rage (n)", translation: "暴怒", section: 1 },
            
            // Second half
            { word: "concentrate (v)", translation: "專心(v)", section: 2 },
            { word: "explain (v)", translation: "解釋(v)", section: 2 },
            { word: "sincere (adj)", translation: "真誠的", section: 2 },
            { word: "confess (v)", translation: "坦白、坦承(v)", section: 2 },
            { word: "restore (v)", translation: "恢復、修復", section: 2 },
            { word: "fade (v)", translation: "逐漸消失", section: 2 },
            { word: "hardly (adv)", translation: "幾乎不", section: 2 },
            { word: "trace (n)", translation: "痕跡", section: 2 },
            { word: "depart (v)", translation: "出發、離開(v)", section: 2 },
            { word: "regret (n)", translation: "後悔、遺憾", section: 2 },
            
            // Phrases & Idioms
            { word: "depart this life", translation: "離開人世", section: 3 },
            { word: "put aside", translation: "放在一旁", section: 3 },
            { word: "put aside", translation: "擱置、不處理", section: 3 },
            { word: "from then on", translation: "從那時起", section: 3 },
            { word: "all the more", translation: "更加，越發", section: 3 },
            { word: "fly into a rage", translation: "勃然大怒", section: 3 },
            { word: "for one thing...for another...", translation: "一方面…另一方面…", section: 3 },
            { word: "be filled with", translation: "充滿", section: 3 },
            { word: "slip away", translation: "偷偷離開", section: 3 },
            { word: "slip away", translation: "(時間等)流逝", section: 3 },
            { word: "slip away", translation: "靜靜死去", section: 3 },
            
            // More on parts of speech
            { word: "grace (n)", translation: "優雅", section: 4 },
            { word: "desperately (adv)", translation: "非常(d...ly)", section: 4 },
            { word: "desperately (adv)", translation: "(因絕望而)拚命地", section: 4 },
            { word: "reluctantly (adv)", translation: "不情願地", section: 4 },
            { word: "description (n)", translation: "描述(n)", section: 4 },
            { word: "frustration (n)", translation: "沮喪、挫折(n)", section: 4 },
            { word: "concentration (n)", translation: "專注力", section: 4 },
            { word: "explanation (n)", translation: "解釋(n)", section: 4 },
            { word: "sincerity (n)", translation: "真誠(n)", section: 4 },
            { word: "confession (n)", translation: "坦白、坦承(n)", section: 4 },
            { word: "departure (n)", translation: "離開、出發(n)", section: 4 },
            { word: "regret (v)", translation: "後悔、遺憾", section: 4 }
        ];

        // Initialize variables for quiz
        let selectedWords = [];
        let currentWordIndex = 0;
        let currentWord = null;
        let recognition = null;

        // Function to get word without parentheses
        function getCleanWord(word) {
            // Extract the word part before any parentheses
            return word.split(' (')[0].trim();
        }

        // Populate vocabulary tables
        function populateTables() {
            const table1 = document.getElementById('vocabBody');
            const table2 = document.getElementById('vocabBody2');
            const table3 = document.getElementById('vocabBody3');
            const table4 = document.getElementById('vocabBody4');
            
            vocabularyData.forEach((item, index) => {
                const row = document.createElement('tr');
                
                // Vocabulary column with speaker icon
                const vocabCell = document.createElement('td');
                vocabCell.textContent = item.word;
                
                const speakerIcon = document.createElement('span');
                speakerIcon.innerHTML = ' 🔊';
                speakerIcon.className = 'speaker-icon';
                speakerIcon.addEventListener('click', () => {
                    // Extract only the word part before parentheses for TTS
                    const textToSpeak = getCleanWord(item.word);
                    speakText(textToSpeak);
                });
                
                vocabCell.appendChild(speakerIcon);
                row.appendChild(vocabCell);
                
                // Translation column
                const translationCell = document.createElement('td');
                translationCell.textContent = item.translation;
                row.appendChild(translationCell);
                
                // Checkbox column
                const checkboxCell = document.createElement('td');
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                checkbox.dataset.index = index;
                checkbox.className = 'word-checkbox';
                checkbox.dataset.section = item.section;
                checkboxCell.appendChild(checkbox);
                row.appendChild(checkboxCell);
                
                // Add to appropriate table
                if (item.section === 1) {
                    table1.appendChild(row);
                } else if (item.section === 2) {
                    table2.appendChild(row);
                } else if (item.section === 3) {
                    table3.appendChild(row);
                } else if (item.section === 4) {
                    table4.appendChild(row);
                }
            });
        }

        // Function to speak text using TTS
        function speakText(text) {
            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'en-US';
            window.speechSynthesis.speak(utterance);
        }

        // Initialize Speech Recognition
        function initSpeechRecognition() {
            if ('webkitSpeechRecognition' in window) {
                recognition = new webkitSpeechRecognition();
            } else if ('SpeechRecognition' in window) {
                recognition = new SpeechRecognition();
            } else {
                alert("Speech recognition is not supported in your browser.");
                return;
            }

            recognition.lang = 'en-US';
            recognition.continuous = false;
            recognition.interimResults = false;

            recognition.onresult = function(event) {
                const transcript = event.results[0][0].transcript.toLowerCase().trim();
                document.getElementById('answerInput').value = transcript;
                document.getElementById('speakBtn').textContent = 'Speak';
            };

            recognition.onend = function() {
                document.getElementById('speakBtn').textContent = 'Speak';
            };

            recognition.onerror = function(event) {
                console.error('Speech recognition error:', event.error);
                document.getElementById('speakBtn').textContent = 'Speak';
            };
        }

        // Function to handle "Select All" checkboxes
        function setupSelectAll() {
            document.getElementById('selectAll').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.word-checkbox[data-section="1"]');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });

            document.getElementById('selectAll2').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.word-checkbox[data-section="2"]');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });
            
            document.getElementById('selectAll3').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.word-checkbox[data-section="3"]');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });
            
            document.getElementById('selectAll4').addEventListener('change', function() {
                const checkboxes = document.querySelectorAll('.word-checkbox[data-section="4"]');
                checkboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            });
        }

        // Function to start the quiz
        function startQuiz() {
            // Get all selected words
            selectedWords = [];
            document.querySelectorAll('.word-checkbox:checked').forEach(checkbox => {
                const index = parseInt(checkbox.dataset.index);
                selectedWords.push(vocabularyData[index]);
            });

            if (selectedWords.length === 0) {
                alert("Please select at least one vocabulary word to start learning!");
                return;
            }

            // Shuffle the selected words
            shuffleArray(selectedWords);
            
            // Show the quiz modal
            document.getElementById('quizModal').style.display = 'flex';
            
            // Set the first word
            currentWordIndex = 0;
            setCurrentWord();
        }

        // Function to set the current word in the quiz
        function setCurrentWord() {
            currentWord = selectedWords[currentWordIndex];
            document.getElementById('promptText').textContent = `Say "${currentWord.translation}" in English.`;
            document.getElementById('answerInput').value = '';
            document.getElementById('feedback').textContent = '';
            document.getElementById('hint').textContent = '';
        }

        // Function to shuffle array
        function shuffleArray(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
        }

        // Function to check answer
        function checkAnswer() {
            const userAnswer = document.getElementById('answerInput').value.trim().toLowerCase();
            const correctAnswer = getCleanWord(currentWord.word).toLowerCase();
            
            // Remove all punctuation and symbols for comparison
            const normalizedUserAnswer = userAnswer.replace(/[^\w\s]/g, '');
            const normalizedCorrectAnswer = correctAnswer.replace(/[^\w\s]/g, '');
            
            if (normalizedUserAnswer === normalizedCorrectAnswer) {
                document.getElementById('feedback').textContent = 'Well done!';
                document.getElementById('feedback').style.color = 'green';
                speakText('Well done!');
            } else {
                document.getElementById('feedback').textContent = 'Try again!';
                document.getElementById('feedback').style.color = 'red';
                speakText('Try again!');
            }
        }

        // Function to show hint
        function showHint() {
            const correctAnswer = getCleanWord(currentWord.word);
            const firstLetter = correctAnswer.charAt(0).toUpperCase();
            document.getElementById('hint').textContent = `The word starts with "${firstLetter}"`;
        }

        // Function to go to next word
        function nextWord() {
            currentWordIndex = (currentWordIndex + 1) % selectedWords.length;
            setCurrentWord();
        }

        // Initialize the app
        document.addEventListener('DOMContentLoaded', function() {
            populateTables();
            setupSelectAll();
            initSpeechRecognition();
            
            // Start learning button
            document.getElementById('startLearningBtn').addEventListener('click', startQuiz);
            
            // Submit button
            document.getElementById('submitBtn').addEventListener('click', checkAnswer);
            
            // Speak button
            document.getElementById('speakBtn').addEventListener('click', function() {
                if (recognition) {
                    this.textContent = 'Recording...';
                    recognition.start();
                }
            });
            
            // Hint button
            document.getElementById('hintBtn').addEventListener('click', showHint);
            
            // Next button
            document.getElementById('nextBtn').addEventListener('click', nextWord);
            
            // Close button and X button
            document.getElementById('closeBtn').addEventListener('click', function() {
                document.getElementById('quizModal').style.display = 'none';
            });
            
            document.getElementById('modalCloseBtn').addEventListener('click', function() {
                document.getElementById('quizModal').style.display = 'none';
            });
            
            // Enter key to submit
            document.getElementById('answerInput').addEventListener('keyup', function(event) {
                if (event.key === 'Enter') {
                    checkAnswer();
                }
            });
        });
    </script>
</body>
</html>