<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multi-Language Vocabulary Quiz</title>
    <style>
        body {
            font-family: sans-serif;
            background-color: #f0f0f0; /* Light grey background */
            margin: 20px;
        }

        #main-container {
            max-width: 1000px;
            margin: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: white;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #e0e0e0; /* Light grey header */
        }

        .popup {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 20px;
            border: 1px solid #ccc;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            z-index: 1000;
            display: none;
        }

        button {
            padding: 10px 15px;
            margin: 5px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }

        #start-learning {
            background-color: #87CEEB; /* Light blue */
            color: white;
        }

        #submit-button {
            background-color: #90EE90; /* Light green */
        }

        #speak-button {
            background-color: #FFA07A; /* Light salmon */
        }

        #hint-button {
            background-color: #FFD700; /* Gold */
        }

        #next-button {
            background-color: #DDA0DD; /* Plum */
        }

        #close-button {
            background-color: #F08080; /* Light coral */
        }

        .speed-select {
            width: 60px;
            margin-left: 5px;
        }

        .language-select {
            width: 100px;
        }

        .speaker-icon {
            cursor: pointer;
        }

    </style>
</head>
<body>

<div id="main-container">
    <a href="https://drive.google.com/drive/folders/1m--fVtzTCv7bLUCduCBoja6K8-8LOy6q?usp=drive_link" target="_blank">Download Excel</a>
    <input type="file" id="excel-file" accept=".xlsx, .xls">
    <button id="start-learning">Start Learning!</button>

    <table id="vocabulary-table">
        <thead>
        <tr>
            <th>
                Language:
                <select id="vocab-lang" class="language-select">
                    <option value="ja-JP">æ—¥æœ¬èªž (ja-JP)</option>
                    <option value="ko-KR">í•œêµ­ì–´ (ko-KR)</option>
                    <option value="es-ES">espaÃ±ol (es-ES)</option>
                    <option value="en-US">English (en-US)</option>
                </select><br>
                Speed:
                <select id="vocab-speed" class="speed-select">
                    <option value="1">1x</option>
                    <option value="0.7">0.7x</option>
                </select>
            </th>
            <th>
                Language:
                <select id="trans-lang" class="language-select">
                    <option value="ja-JP">æ—¥æœ¬èªž (ja-JP)</option>
                    <option value="ko-KR">í•œêµ­ì–´ (ko-KR)</option>
                    <option value="es-ES">espaÃ±ol (es-ES)</option>
                    <option value="en-US">English (en-US)</option>
                </select><br>
                Speed:
                <select id="trans-speed" class="speed-select">
                    <option value="1">1x</option>
                    <option value="0.7">0.7x</option>
                </select>
            </th>
            <th>
                Select <input type="checkbox" id="select-all">
            </th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <div class="popup" id="quiz-popup">
        <p id="quiz-prompt">Say "[Translation]" in another language.</p>
        <input type="text" id="quiz-input">
        <button id="submit-button">Submit</button>
        <button id="speak-button">Speak</button>
        <button id="hint-button">Hint</button>
        <button id="next-button">Next</button>
        <button id="close-button">Close</button>
        <p id="quiz-result"></p>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js"></script>
<script>
    const excelFile = document.getElementById('excel-file');
    const tableBody = document.querySelector('#vocabulary-table tbody');
    const startLearningButton = document.getElementById('start-learning');
    const quizPopup = document.getElementById('quiz-popup');
    const quizPrompt = document.getElementById('quiz-prompt');
    const quizInput = document.getElementById('quiz-input');
    const submitButton = document.getElementById('submit-button');
    const speakButton = document.getElementById('speak-button');
    const hintButton = document.getElementById('hint-button');
    const nextButton = document.getElementById('next-button');
    const closeButton = document.getElementById('close-button');
    const quizResult = document.getElementById('quiz-result');
    const selectAllCheckbox = document.getElementById('select-all');

    let vocabularyData = [];
    let selectedVocabulary = [];
    let currentQuizWord = null;
    let recognition;

    excelFile.addEventListener('change', handleFile);
    startLearningButton.addEventListener('click', startQuiz);
    submitButton.addEventListener('click', checkAnswer);
    speakButton.addEventListener('click', toggleSpeechInput);
    hintButton.addEventListener('click', showHint);
    nextButton.addEventListener('click', nextWord);
    closeButton.addEventListener('click', closePopup);
    selectAllCheckbox.addEventListener('change', toggleSelectAll);

    function handleFile(event) {
        const file = event.target.files[0];
        const reader = new FileReader();

        reader.onload = function(e) {
            const data = new Uint8Array(e.target.result);
            const workbook = XLSX.read(data, { type: 'array' });
            const sheetName = workbook.SheetNames[0];
            const worksheet = workbook.Sheets[sheetName];
            vocabularyData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
            displayTable(vocabularyData);
        };

        reader.readAsArrayBuffer(file);
    }
function displayTable(data) {
        tableBody.innerHTML = '';
        data.forEach((row, index) => {
            if (index === 0) return; // Skip header row
            const vocab = row[0];
            const trans = row[1];
            const rowElement = document.createElement('tr');
            rowElement.innerHTML = `
                <td>
                    ${vocab}
                    <span class="speaker-icon" data-text="${vocab}" data-lang="${document.getElementById('vocab-lang').value}" data-speed="${document.getElementById('vocab-speed').value}">ðŸ”Š</span>
                </td>
                <td>
                    ${trans}
                    <span class="speaker-icon" data-text="${trans}" data-lang="${document.getElementById('trans-lang').value}" data-speed="${document.getElementById('trans-speed').value}">ðŸ”Š</span>
                </td>
                <td>
                    <input type="checkbox" class="select-word" data-index="${index - 1}">
                </td>
            `;
            tableBody.appendChild(rowElement);
        });

        document.querySelectorAll('.speaker-icon').forEach(icon => {
            icon.addEventListener('click', speakText);
        });
    }

    function speakText(event) {
        const text = event.target.dataset.text;
        const lang = event.target.dataset.lang;
        const speed = parseFloat(event.target.dataset.speed);
        const utterance = new SpeechSynthesisUtterance(text.replace(/\(.*?\)|\[.*?\]/g, '').trim());
        utterance.lang = lang;
        utterance.rate = speed;
        speechSynthesis.speak(utterance);
    }

    function startQuiz() {
        selectedVocabulary = [];
        document.querySelectorAll('.select-word:checked').forEach(checkbox => {
            selectedVocabulary.push(vocabularyData[parseInt(checkbox.dataset.index) + 1]);
        });
        if (selectedVocabulary.length === 0) {
            alert('Please select at least one word to start the quiz.');
            return;
        }
        nextWord();
        quizPopup.style.display = 'block';
    }

    function checkAnswer() {
        const userAnswer = quizInput.value.toLowerCase().trim();
        const correctAnswer = currentQuizWord[0].toLowerCase().trim();
        const correctAnswers = correctAnswer.split('/');
        let isCorrect = false;

        correctAnswers.forEach(ans => {
            if (userAnswer === ans.trim()) {
                isCorrect = true;
            }
        });

        if (isCorrect) {
            quizResult.textContent = 'Well done!';
            speakText({ target: { dataset: { text: currentQuizWord[0], lang: document.getElementById('vocab-lang').value, speed: document.getElementById('vocab-speed').value } } });
        } else {
            quizResult.textContent = 'Try again!';
            speakText({ target: { dataset: { text: currentQuizWord[0], lang: document.getElementById('vocab-lang').value, speed: document.getElementById('vocab-speed').value } } });
        }
    }

    function toggleSpeechInput() {
        if (!recognition) {
            recognition = new webkitSpeechRecognition() || new SpeechRecognition();
            recognition.lang = document.getElementById('vocab-lang').value;
            recognition.continuous = false;
            recognition.interimResults = false;

            recognition.onstart = function() {
                speakButton.textContent = 'Recording';
            };

            recognition.onresult = function(event) {
                const transcript = event.results[0][0].transcript.toLowerCase().replace(/[.,\/#!$%\^&\*;:{}=\-_`~()]/g,"").replace(/\s{2,}/g," ");
                quizInput.value = transcript;
                speakButton.textContent = 'Speak';
                checkAnswer();
            };

            recognition.onend = function() {
                speakButton.textContent = 'Speak';
            };
        }

        if (speakButton.textContent === 'Speak') {
            recognition.start();
        } else {
            recognition.stop();
        }
    }

    function showHint() {
        const hint = `The answer starts with ${currentQuizWord[0].charAt(0).toUpperCase()}.`;
        alert(hint);
    }

    function nextWord() {
        currentQuizWord = selectedVocabulary[Math.floor(Math.random() * selectedVocabulary.length)];
        quizPrompt.textContent = `Say "${currentQuizWord[1]}" in another language.`;
        quizInput.value = '';
        quizResult.textContent = '';
    }

    function closePopup() {
        quizPopup.style.display = 'none';
    }

    function toggleSelectAll() {
        const checkboxes = document.querySelectorAll('.select-word');
        checkboxes.forEach(checkbox => {
            checkbox.checked = selectAllCheckbox.checked;
        });
    }

    document.getElementById('vocab-lang').addEventListener('change', function() {
        updateSpeakerIcons('vocab');
    });

    document.getElementById('trans-lang').addEventListener('change', function() {
        updateSpeakerIcons('trans');
    });

    document.getElementById('vocab-speed').addEventListener('change', function() {
        updateSpeakerIcons('vocab');
    });

    document.getElementById('trans-speed').addEventListener('change', function() {
        updateSpeakerIcons('trans');
    });

    function updateSpeakerIcons(column) {
        let lang, speed;

        if (column === 'vocab') {
            lang = document.getElementById('vocab-lang').value;
            speed = document.getElementById('vocab-speed').value;
        } else {
            lang = document.getElementById('trans-lang').value;
            speed = document.getElementById('trans-speed').value;
        }

        const icons = document.querySelectorAll(`#vocabulary-table tbody tr td:nth-child(${column === 'vocab' ? 1 : 2}) .speaker-icon`);
        icons.forEach(icon => {
            icon.dataset.lang = lang;
            icon.dataset.speed = speed;
        });
    }

</script>
</body>
</html>
